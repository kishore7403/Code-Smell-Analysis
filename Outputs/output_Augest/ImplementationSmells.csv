Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateBucketAndListAllBuckets,Long Statement,The length of the statement "final List<Bucket> buckets=s3Client.listBuckets().stream().filter(b -> BUCKET_NAME.equals(b.getName())).collect(toList());" is 122.,91
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateBucketAndListAllBuckets,Magic Number,The method contains a magic number: 1000,91
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateBucketAndListAllBuckets,Magic Number,The method contains a magic number: 1000,91
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateBucketAndListAllBuckets,Magic Number,The method contains a magic number: 60000,91
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,defaultBucketsGotCreated,Long Statement,The length of the statement "final Set<String> bucketNames=buckets.stream().map(Bucket::getName).filter(INITIAL_BUCKET_NAMES::contains).collect(Collectors.toSet());" is 135.,117
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadAndListV2Objects,Magic Number,The method contains a magic number: 3,144
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadAndListV2Objects,Magic Number,The method contains a magic number: 3,144
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadAndDownloadObject,Long Statement,The length of the statement "final AmazonS3 uploadClient=defaultTestAmazonS3ClientBuilder().withPayloadSigningEnabled(uploadWithSigning).withChunkedEncodingDisabled(uploadChunked).build();" is 159.,173
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldHonorEncodingType,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.listObjects(lor)).isInstanceOf(SdkClientException.class).hasMessageContaining("Failed to parse XML document");" is 144.,287
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldHonorEncodingTypeV2,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.listObjectsV2(lorv2)).isInstanceOf(SdkClientException.class).hasMessageContaining("Failed to parse XML document");" is 148.,315
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadAndDownloadStream,Long Statement,The length of the statement "assertThat(s3Object.getObjectMetadata().getContentEncoding()).as("Uploaded File should have Encoding-Type set").isEqualTo(contentEncoding);" is 139.,340
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadWithEncryption,Long Statement,The length of the statement "assertThat(objectMetadata.getUserMetadata()).as("User metadata should be identical!").isEqualTo(metadata.getUserMetadata());" is 124.,380
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotUploadWithWrongEncryptionKey,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.putObject(putObjectRequest)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining("Status Code: 400; Error Code: KMS.NotFoundException");" is 177.,408
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotUploadStreamingWithWrongEncryptionKey,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.putObject(putObjectRequest)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining("Status Code: 400; Error Code: KMS.NotFoundException");" is 177.,424
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObject,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,444
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectWithNewUserMetadata,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,475
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectWithNewUserMetadata,Long Statement,The length of the statement "assertThat(copiedObject.getObjectMetadata().getUserMetadata()).as("User metadata should be identical!").isEqualTo(objectMetadata.getUserMetadata());" is 148.,475
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectWithSourceUserMetadata,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,514
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectWithSourceUserMetadata,Long Statement,The length of the statement "assertThat(copiedObject.getObjectMetadata().getUserMetadata()).as("User metadata should be identical!").isEqualTo(sourceObjectMetadata.getUserMetadata());" is 154.,514
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectToKeyNeedingEscaping,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,555
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectFromKeyNeedingEscaping,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,586
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectEncrypted,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,617
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotObjectCopyWithWrongEncryptionKey,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,650
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotObjectCopyWithWrongEncryptionKey,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.copyObject(copyObjectRequest)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining("Status Code: 400; Error Code: KMS.NotFoundException");" is 179.,650
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,bucketShouldExist,Long Statement,The length of the statement "assertThat(doesBucketExist).as(String.format("The previously created bucket` '%s'` should exist!"`BUCKET_NAME)).isTrue();" is 121.,674
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectMetadata,Long Statement,The length of the statement "final PutObjectResult putObjectResult=s3Client.putObject(new PutObjectRequest(BUCKET_NAME`UPLOAD_FILE_NAME`uploadFile).withMetadata(objectMetadata));" is 149.,700
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectMetadata,Long Statement,The length of the statement "assertThat(metadataExisting.getContentEncoding()).as("Content-Encoding should be identical!").isEqualTo(putObjectResult.getMetadata().getContentEncoding());" is 156.,700
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectMetadata,Long Statement,The length of the statement "assertThat(metadataExisting.getUserMetadata()).as("User metadata should be identical!").isEqualTo(objectMetadata.getUserMetadata());" is 132.,700
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectMetadata,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.getObjectMetadata(BUCKET_NAME`nonExistingFileName)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining("Status Code: 404");" is 165.,700
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldDeleteObject,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.getObjectMetadata(BUCKET_NAME`UPLOAD_FILE_NAME)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining("Status Code: 404");" is 162.,731
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldBatchDeleteObjects,Long Statement,The length of the statement "assertThat(delObjRes.getDeletedObjects().stream().map(DeletedObject::getKey).collect(toList())).as("Only existing files were reported as deleted").contains(file1`file2`file3);" is 175.,747
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldBatchDeleteObjects,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.getObjectMetadata(BUCKET_NAME`UPLOAD_FILE_NAME)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining("Status Code: 404");" is 162.,747
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldBatchDeleteObjects,Magic Number,The method contains a magic number: 3,747
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotDeleteNonEmptyBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.deleteBucket(BUCKET_NAME)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining("Status Code: 409; Error Code: BucketNotEmpty");" is 168.,800
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectListing,Long Statement,The length of the statement "assertThat(objectListingResult.getObjectSummaries().get(0).getKey()).as("The Name of the first S3ObjectSummary item has not expected the key name.").isEqualTo(UPLOAD_FILE_NAME);" is 177.,815
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Long Statement,The length of the statement "final Download download=transferManager.download(new GetObjectRequest(BUCKET_NAME`UPLOAD_FILE_NAME).withRange(1`2)`downloadFile);" is 129.,858
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Long Statement,The length of the statement "transferManager.download(new GetObjectRequest(BUCKET_NAME`UPLOAD_FILE_NAME).withRange(0`1000)`downloadFile).waitForCompletion();" is 128.,858
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Magic Number,The method contains a magic number: 2,858
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Magic Number,The method contains a magic number: 2L,858
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Magic Number,The method contains a magic number: 2L,858
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Magic Number,The method contains a magic number: 1000,858
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,multipartCopy,Long Statement,The length of the statement "final Copy copy=transferManager.copy(sourceBucket.getName()`assumedSourceKey`targetBucket.getName()`assumedDestinationKey);" is 123.,889
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,multipartCopy,Long Statement,The length of the statement "assertThat(uploadResult.getETag()).as("Hashes for source and target S3Object do not match.").isEqualTo(sourceInputStream.getEtag());" is 132.,889
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,multipartCopy,Magic Number,The method contains a magic number: 3,889
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldAddAndRetrieveTags,Long Statement,The length of the statement "final SetObjectTaggingRequest setObjectTaggingRequest=new SetObjectTaggingRequest(BUCKET_NAME`s3Object.getKey()`new ObjectTagging(tagList));" is 140.,926
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldAddAndRetrieveTags,Long Statement,The length of the statement "assertThat(getObjectTaggingResult.getTagSet().get(0).getValue()).as("The value of the tag placed did not match").isEqualTo("bar");" is 130.,926
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,canAddTagsOnPutObject,Long Statement,The length of the statement "final PutObjectRequest putObjectRequest=new PutObjectRequest(BUCKET_NAME`uploadFile.getName()`uploadFile).withTagging(new ObjectTagging(tagList));" is 146.,963
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,canAddTagsOnPutObject,Long Statement,The length of the statement "assertThat(getObjectTaggingResult.getTagSet().get(0).getValue()).as("The value of the tag placed did not match").isEqualTo("bar");" is 130.,963
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Identifier,The length of the identifier s3ObjectWithEtagDownloadedHash is 30.,996
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Identifier,The length of the identifier s3ObjectWithHoutEtagDownloadedHash is 34.,996
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Statement,The length of the statement "assertThat(uploadHash).as("The uploaded file and the recived file should be the same` " + "when requesting file with matching eTag given same eTag").isEqualTo(s3ObjectWithEtagDownloadedHash);" is 191.,996
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Statement,The length of the statement "assertThat(uploadHash).as("The uploaded file and the recived file should be the same` " + "when requesting file with non-matching eTag but given different eTag").isEqualTo(s3ObjectWithHoutEtagDownloadedHash);" is 208.,996
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Statement,The length of the statement "assertThat(s3ObjectWithEtagNull).as("Get Object with matching eTag should not return object if no eTag matches").isNull();" is 122.,996
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Statement,The length of the statement "assertThat(s3ObjectWithHoutEtagNull).as("Get Object with non-matching eTag should not return object if eTag matches").isNull();" is 127.,996
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,putObjectOnNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.putObject(new PutObjectRequest(BUCKET_NAME`UPLOAD_FILE_NAME`uploadFile))).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 183.,59
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,putObjectEncryptedOnNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.putObject(new PutObjectRequest(BUCKET_NAME`UPLOAD_FILE_NAME`uploadFile))).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 183.,73
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,copyObjectToNonExistingDestinationBucket,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,91
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,copyObjectToNonExistingDestinationBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.copyObject(copyObjectRequest)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 140.,91
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,copyObjectEncryptedToNonExistingDestinationBucket,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,113
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,copyObjectEncryptedToNonExistingDestinationBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.copyObject(copyObjectRequest)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 140.,113
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,getObjectMetadataWithNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.getObjectMetadata(UUID.randomUUID().toString()`UPLOAD_FILE_NAME)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(STATUS_CODE_404);" is 176.,137
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,getNonExistingObject,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.getObject(getObjectRequest)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_KEY);" is 135.,155
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,deleteFromNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.deleteObject(UUID.randomUUID().toString()`UPLOAD_FILE_NAME)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 170.,168
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,batchDeleteObjectsFromNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.deleteObjects(multiObjectDeleteRequest)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 150.,193
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,deleteNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.deleteBucket(BUCKET_NAME)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 136.,217
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,listObjectsFromNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.listObjects(UUID.randomUUID().toString()`UPLOAD_FILE_NAME)).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 169.,227
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,uploadParallelToNonExistingBucket,Long Statement,The length of the statement "final Upload upload=transferManager.upload(new PutObjectRequest(UUID.randomUUID().toString()`UPLOAD_FILE_NAME`uploadFile));" is 123.,237
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,multipartUploadsToNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME))).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 200.,257
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,listMultipartUploadsFromNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.listMultipartUploads(new ListMultipartUploadsRequest(UUID.randomUUID().toString()))).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 194.,268
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,abortMultipartUploadInNonExistingBucket,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,283
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,abortMultipartUploadInNonExistingBucket,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()).isNotEmpty();" is 123.,283
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,abortMultipartUploadInNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.abortMultipartUpload(new AbortMultipartUploadRequest(UUID.randomUUID().toString()`UPLOAD_FILE_NAME`uploadId))).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 220.,283
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,uploadMultipartWithInvalidPartNumber,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,303
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,uploadMultipartWithInvalidPartNumber,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()).isNotEmpty();" is 123.,303
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,uploadMultipartWithInvalidPartNumber,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(invalidPartNumber).withPartSize(uploadFile.length()).withLastPart(true))).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(INVALID_REQUEST);" is 406.,303
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,329
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()).isNotEmpty();" is 123.,329
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Long Statement,The length of the statement "final PartETag partETag=s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(1).withPartSize(uploadFile.length()).withLastPart(true)).getPartETag();" is 326.,329
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Long Statement,The length of the statement "assertThatThrownBy(() -> s3Client.completeMultipartUpload(new CompleteMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME`uploadId`partETags))).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(INVALID_PART);" is 217.,329
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Magic Number,The method contains a magic number: 2,329
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,rangeDownloadsFromNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> transferManager.download(new GetObjectRequest(UUID.randomUUID().toString()`UPLOAD_FILE_NAME).withRange(1`2)`downloadFile).waitForCompletion()).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(STATUS_CODE_404);" is 244.,362
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,rangeDownloadsFromNonExistingBucket,Magic Number,The method contains a magic number: 2,362
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,rangeDownloadsFromNonExistingObject,Long Statement,The length of the statement "assertThatThrownBy(() -> transferManager.download(new GetObjectRequest(BUCKET_NAME`UUID.randomUUID().toString()).withRange(1`2)`downloadFile).waitForCompletion()).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(STATUS_CODE_404);" is 239.,387
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,rangeDownloadsFromNonExistingObject,Magic Number,The method contains a magic number: 2,387
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,multipartCopyToNonExistingBucket,Long Statement,The length of the statement "assertThatThrownBy(() -> transferManager.copy(sourceBucket.getName()`assumedSourceKey`UUID.randomUUID().toString()`assumedDestinationKey).waitForCopyResult()).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(NO_SUCH_BUCKET);" is 234.,412
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,multipartCopyToNonExistingBucket,Magic Number,The method contains a magic number: 3,412
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,multipartCopyNonExistingObject,Long Statement,The length of the statement "assertThatThrownBy(() -> transferManager.copy(sourceBucket.getName()`UUID.randomUUID().toString()`targetBucket.getName()`assumedDestinationKey).waitForCopyResult()).isInstanceOf(AmazonS3Exception.class).hasMessageContaining(STATUS_CODE_404);" is 241.,444
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,multipartCopyNonExistingObject,Magic Number,The method contains a magic number: 3,444
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesV2IT,getNonExistingObject,Long Statement,The length of the statement "assertThatThrownBy(() -> s3ClientV2.getObject(req)).isInstanceOf(NoSuchKeyException.class).hasMessageContaining(NO_SUCH_KEY);" is 125.,30
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,data,Long Statement,The length of the statement "return Arrays.asList(param(null`null`null).keys(ALL_OBJECTS)`param(""`null`null).keys(ALL_OBJECTS)`param(null`""`null).keys(ALL_OBJECTS)`param("/"`null`null)`param("b"`null`null).keys("b"`"b/1"`"b/1/1"`"b/1/2"`"b/2")`param("b/"`null`null).keys("b/1"`"b/1/1"`"b/1/2"`"b/2")`param("b"`"/"`null).keys("b").prefixes("b/")`param("b/"`"/"`null).keys("b/1"`"b/2").prefixes("b/1/")`param("b/1"`"/"`null).keys("b/1").prefixes("b/1/")`param("b/1/"`"/"`null).keys("b/1/1"`"b/1/2")`param("c"`"/"`null).prefixes("c/")`param("c/"`"/"`null).keys("c/1").prefixes("c/1/")`param("eor"`"/"`null).keys("eor.txt")`param("b"`null`"b/1/1").keys("b/1/2"`"b/2")`param("b"`null`"b/0").keys("b/1"`"b/1/1"`"b/1/2"`"b/2")`param("3330/"`null`null).keys("3330/0")`param(null`null`null).encodedKeys(ALL_OBJECTS)`param("b/1"`"/"`null).encodedKeys("b/1").prefixes("b/1/"));" is 839.,104
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV1,Long Statement,The length of the statement "final ListObjectsRequest request=new ListObjectsRequest(BUCKET_NAME`parameters.prefix`parameters.startAfter`parameters.delimiter`null);" is 135.,150
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV1,Long Statement,The length of the statement "LOGGER.info("list V1` prefix='{}'` delimiter='{}': \n Objects: \n {}\n Prefixes: \n {}\n"`parameters.prefix`parameters.delimiter`l.getObjectSummaries().stream().map(S3ObjectSummary::getKey).collect(joining("\n "))`String.join("\n "`l.getCommonPrefixes()));" is 256.,150
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV1,Long Statement,The length of the statement "assertThat(l.getObjectSummaries().stream().map(S3ObjectSummary::getKey).collect(toList())).as("Returned keys are correct").containsExactlyInAnyOrderElementsOf(Arrays.asList(parameters.expectedKeys));" is 199.,150
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV1,Long Statement,The length of the statement "assertThat(new ArrayList<>(l.getCommonPrefixes())).as("Returned prefixes are correct").containsExactlyInAnyOrderElementsOf(Arrays.asList(expectedPrefixes));" is 156.,150
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV2,Long Statement,The length of the statement "final ListObjectsV2Result l=s3Client.listObjectsV2(new ListObjectsV2Request().withBucketName(BUCKET_NAME).withDelimiter(parameters.delimiter).withPrefix(parameters.prefix).withStartAfter(parameters.startAfter).withEncodingType(parameters.expectedEncoding));" is 257.,186
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV2,Long Statement,The length of the statement "LOGGER.info("list V2` prefix='{}'` delimiter='{}'` startAfter='{}': " + "\n Objects: \n {}\n Prefixes: \n {}\n"`parameters.prefix`parameters.delimiter`parameters.startAfter`l.getObjectSummaries().stream().map(s -> StringEncoding.decode(s.getKey())).collect(joining("\n "))`String.join("\n "`l.getCommonPrefixes()));" is 315.,186
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV2,Long Statement,The length of the statement "assertThat(l.getObjectSummaries().stream().map(S3ObjectSummary::getKey).collect(toList())).as("Returned keys are correct").containsExactlyInAnyOrderElementsOf(Arrays.asList(expectedDecodedKeys));" is 195.,186
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV2,Long Statement,The length of the statement "assertThat(new ArrayList<>(l.getCommonPrefixes())).as("Returned prefixes are correct").containsExactlyInAnyOrderElementsOf(Arrays.asList(parameters.expectedPrefixes));" is 167.,186
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysIsDefault,Magic Number,The method contains a magic number: 2,49
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysIsDefault,Magic Number,The method contains a magic number: 1000,49
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysEqualToAmountOfObjects,Magic Number,The method contains a magic number: 2,58
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysEqualToAmountOfObjects,Magic Number,The method contains a magic number: 2,58
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysEqualToAmountOfObjects,Magic Number,The method contains a magic number: 2,58
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysMoreThanAmountOfObjects,Magic Number,The method contains a magic number: 3,68
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysMoreThanAmountOfObjects,Magic Number,The method contains a magic number: 2,68
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysMoreThanAmountOfObjects,Magic Number,The method contains a magic number: 3,68
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysIsNegative,Magic Number,The method contains a magic number: 2,88
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysIsNegative,Magic Number,The method contains a magic number: 1000,88
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1PaginationIT,shouldTruncateAndReturnNextMarker,Long Statement,The length of the statement "final ListObjectsRequest continueRequest=new ListObjectsRequest().withBucketName(bucketName).withMarker(objectListing.getNextMarker());" is 135.,39
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME`objectMetadata));" is 180.,62
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "final UploadPartResult uploadPartResult=s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(1).withPartSize(uploadFile.length()).withLastPart(true));" is 328.,62
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "s3Client.completeMultipartUpload(new CompleteMultipartUploadRequest(initiateMultipartUploadResult.getBucketName()`initiateMultipartUploadResult.getKey()`initiateMultipartUploadResult.getUploadId()`partETags));" is 209.,62
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "final ObjectMetadata metadataExisting=s3Client.getObjectMetadata(initiateMultipartUploadResult.getBucketName()`initiateMultipartUploadResult.getKey());" is 151.,62
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "assertThat(metadataExisting.getUserMetadata()).as("User metadata should be identical!").isEqualTo(objectMetadata.getUserMetadata());" is 132.,62
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldInitiateMultipartAndRetrieveParts,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME`objectMetadata));" is 180.,104
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldInitiateMultipartAndRetrieveParts,Long Statement,The length of the statement "s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(1).withPartSize(uploadFile.length()).withLastPart(true));" is 288.,104
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldListMultipartUploads,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,145
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAbortMultipartUpload,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,190
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAbortMultipartUpload,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()).isNotEmpty();" is 123.,190
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`key));" is 152.,214
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "PartETag partETag1=s3Client.uploadPart(getUploadPartRequest(key`uploadId).withPartNumber(1).withPartSize(randomBytes1.length).withInputStream(new ByteArrayInputStream(randomBytes1))).getPartETag();" is 197.,214
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "PartETag partETag2=s3Client.uploadPart(getUploadPartRequest(key`uploadId).withPartNumber(2).withPartSize(randomBytes2.length).withInputStream(new ByteArrayInputStream(randomBytes2))).getPartETag();" is 197.,214
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "PartETag partETag3=s3Client.uploadPart(getUploadPartRequest(key`uploadId).withPartNumber(3).withPartSize(randomBytes3.length).withInputStream(new ByteArrayInputStream(randomBytes3))).getPartETag();" is 197.,214
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "final CompleteMultipartUploadResult result=s3Client.completeMultipartUpload(new CompleteMultipartUploadRequest(BUCKET_NAME`key`uploadId`parts));" is 144.,214
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "assertThat(object.getObjectMetadata().getContentLength()).as("Content length doesn't match").isEqualTo((long)randomBytes1.length + randomBytes3.length);" is 152.,214
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "assertThat(readStreamIntoByteArray(object.getObjectContent())).as("Object contents doesn't match").isEqualTo(concatByteArrays(randomBytes1`randomBytes3));" is 154.,214
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Magic Number,The method contains a magic number: 2,214
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Magic Number,The method contains a magic number: 3,214
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldCopyObjectPart,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(destinationBucketName`destinationKey`objectMetadata));" is 188.,288
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldCopyObjectPart,Long Statement,The length of the statement "PartListing partListing=s3Client.listParts(new ListPartsRequest(initiateMultipartUploadResult.getBucketName()`initiateMultipartUploadResult.getKey()`initiateMultipartUploadResult.getUploadId()));" is 195.,288
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 5,339
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 1024,339
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 1024,339
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 1024,339
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 1024,339
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,batchDeleteUsesApplicationXmlContentType,Long Statement,The length of the statement "postObject.setEntity(new StringEntity("<?xml version=\"1.0\" encoding=\"UTF-8\"?><Delete>" + "<Object><Key>myFile-1</Key></Object>" + "<Object><Key>myFile-2</Key></Object>"+ "</Delete>"`(ContentType)null));" is 206.,126
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,completeMultipartUsesApplicationXmlContentType,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(targetBucket.getName()`UPLOAD_FILE_NAME));" is 176.,139
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,completeMultipartUsesApplicationXmlContentType,Long Statement,The length of the statement "final UploadPartResult uploadPartResult=s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(1).withPartSize(uploadFile.length()).withLastPart(true));" is 328.,139
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,completeMultipartUsesApplicationXmlContentType,Long Statement,The length of the statement "final HttpPost postObject=new HttpPost(SLASH + targetBucket.getName() + SLASH+ UPLOAD_FILE_NAME+ "?uploadId="+ uploadId);" is 121.,139
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,completeMultipartUsesApplicationXmlContentType,Long Statement,The length of the statement "postObject.setEntity(new StringEntity("<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + "<CompleteMultipartUpload xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">" + "<Part>"+ "<ETag>" + uploadPartResult.getPartETag().getETag() + "</ETag>"+ "<PartNumber>1</PartNumber>"+ "</Part>"+ "</CompleteMultipartUpload>"`(ContentType)null));" is 330.,139
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,putObjectWithSpecialCharactersInTheName,Long Statement,The length of the statement "final String fileNameWithSpecialCharacters="file=name$Dollar;Semicolon" + "&Ampersand@At:Colon Space`Comma?Questionmark";" is 121.,173
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,putObjectWithSpecialCharactersInTheName,Long Statement,The length of the statement "final HttpPut putObject=new HttpPut(SLASH + targetBucket.getName() + SLASH+ StringEncoding.encode(fileNameWithSpecialCharacters));" is 130.,173
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,putObjectWithSpecialCharactersInTheName,Long Statement,The length of the statement "assertThat(s3Client.listObjects(targetBucket.getName()).getObjectSummaries().get(0).getKey()).isEqualTo(fileNameWithSpecialCharacters);" is 135.,173
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,batchDeleteObjects,Long Statement,The length of the statement "postObject.setEntity(new StringEntity("<?xml version=\"1.0\" " + "encoding=\"UTF-8\"?><Delete><Object><Key>myFile-1</Key></Object><Object><Key>myFile-2" + "</Key></Object></Delete>"`(ContentType)null));" is 202.,204
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,defaultTestAmazonS3ClientBuilder,Long Statement,The length of the statement "return AmazonS3ClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials("foo"`"bar"))).withClientConfiguration(ignoringInvalidSslCertificates(new ClientConfiguration())).withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(getServiceEndpoint()`"us-east-1")).enablePathStyleAccess();" is 339.,94
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,createS3ClientV2,Long Statement,The length of the statement "return S3Client.builder().region(Region.of("us-east-1")).credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create("foo"`"bar"))).endpointOverride(URI.create(getServiceEndpoint())).httpClient(UrlConnectionHttpClient.builder().buildWithDefaults(AttributeMap.builder().put(TRUST_ALL_CERTIFICATES`Boolean.TRUE).build())).build();" is 348.,107
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,cleanupFilestore,Long Statement,The length of the statement "s3Client.listMultipartUploads(new ListMultipartUploadsRequest(bucket.getName())).getMultipartUploads().forEach(upload -> s3Client.abortMultipartUpload(new AbortMultipartUploadRequest(bucket.getName()`upload.getKey()`upload.getUploadId())));" is 240.,118
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,cleanupFilestore,Long Statement,The length of the statement "s3Client.listObjects(bucket.getName()).getObjectSummaries().forEach((object -> s3Client.deleteObject(bucket.getName()`object.getKey())));" is 137.,118
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,getPort,Magic Number,The method contains a magic number: 9191,140
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,getHttpPort,Magic Number,The method contains a magic number: 9090,144
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,ignoringInvalidSslCertificates,Long Statement,The length of the statement "clientConfiguration.getApacheHttpClientConfig().withSslSocketFactory(new SSLConnectionSocketFactory(createBlindlyTrustingSslContext()`NoopHostnameVerifier.INSTANCE));" is 166.,148
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,createTransferManager,Long Statement,The length of the statement "return TransferManagerBuilder.standard().withS3Client(s3Client).withExecutorFactory(() -> Executors.newFixedThreadPool(THREAD_COUNT`threadFactory)).withMultipartUploadThreshold(multipartUploadThreshold).withMinimumUploadPartSize(multipartUploadPartSize).withMultipartCopyPartSize(multipartCopyPartSize).withMultipartCopyThreshold(multipartCopyThreshold).build();" is 362.,216
S3Mock,com.adobe.testing.s3mock.domain,BucketContents,BucketContents,Long Parameter List,The method has 6 parameters. ,56
S3Mock,com.adobe.testing.s3mock.domain,FileStore,bucketFromPath,Long Statement,The length of the statement "result=new Bucket(path`path.getFileName().toString()`S3_OBJECT_DATE_FORMAT.format(attributes.creationTime().toInstant()));" is 122.,186
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Parameter List,The method has 6 parameters. ,202
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Statement,The length of the statement "return putS3Object(bucketName`fileName`contentType`contentEncoding`dataStream`useV4ChunkedWithSigningFormat`Collections.emptyMap()`null`null);" is 142.,202
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Parameter List,The method has 7 parameters. ,228
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Statement,The length of the statement "return putS3Object(bucketName`fileName`contentType`contentEncoding`dataStream`useV4ChunkedWithSigningFormat`userMetadata`null`null);" is 132.,228
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Parameter List,The method has 9 parameters. ,257
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Statement,The length of the statement "final File dataFile=inputStreamToFile(wrapStream(dataStream`useV4ChunkedWithSigningFormat)`objectRootFolder.toPath().resolve(DATA_FILE));" is 137.,257
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3ObjectWithKMSEncryption,Long Parameter List,The method has 7 parameters. ,322
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3ObjectWithKMSEncryption,Long Statement,The length of the statement "return putS3Object(bucketName`fileName`contentType`null`dataStream`useV4ChunkedWithSigningFormat`Collections.emptyMap()`encryption`kmsKeyId);" is 141.,322
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3ObjectWithKMSEncryption,Long Parameter List,The method has 8 parameters. ,349
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3ObjectWithKMSEncryption,Long Statement,The length of the statement "return putS3Object(bucketName`fileName`contentType`null`dataStream`useV4ChunkedWithSigningFormat`userMetadata`encryption`kmsKeyId);" is 131.,349
S3Mock,com.adobe.testing.s3mock.domain,FileStore,inputStreamToFile,Magic Number,The method contains a magic number: 1024,446
S3Mock,com.adobe.testing.s3mock.domain,FileStore,getS3Objects,Long Statement,The length of the statement "final Set<Path> collect=directoryHierarchy.filter(path -> path.toFile().isDirectory()).map(path -> theBucket.getPath().relativize(path)).filter(path -> isBlank(prefix) || (null != normalizedPrefix && path.toString().startsWith(normalizedPrefix))).collect(toSet());" is 264.,540
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3Object,Long Statement,The length of the statement "return copyS3ObjectEncrypted(sourceBucketName`sourceObjectName`destinationBucketName`destinationObjectName`null`null`Collections.emptyMap());" is 141.,580
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3Object,Long Parameter List,The method has 5 parameters. ,601
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3Object,Long Statement,The length of the statement "return copyS3ObjectEncrypted(sourceBucketName`sourceObjectName`destinationBucketName`destinationObjectName`null`null`userMetadata);" is 131.,601
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3ObjectEncrypted,Long Parameter List,The method has 6 parameters. ,626
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3ObjectEncrypted,Long Statement,The length of the statement "return copyS3ObjectEncrypted(sourceBucketName`sourceObjectName`destinationBucketName`destinationObjectName`encryption`kmsKeyId`Collections.emptyMap());" is 151.,626
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3ObjectEncrypted,Long Parameter List,The method has 7 parameters. ,650
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3ObjectEncrypted,Long Statement,The length of the statement "final S3Object copiedObject=putS3Object(destinationBucketName`destinationObjectName`sourceObject.getContentType()`sourceObject.getContentEncoding()`new FileInputStream(sourceObject.getDataFile())`false`copyUserMetadata`encryption`kmsKeyId);" is 240.,650
S3Mock,com.adobe.testing.s3mock.domain,FileStore,prepareMultipartUpload,Long Parameter List,The method has 8 parameters. ,747
S3Mock,com.adobe.testing.s3mock.domain,FileStore,prepareMultipartUpload,Long Parameter List,The method has 7 parameters. ,778
S3Mock,com.adobe.testing.s3mock.domain,FileStore,prepareMultipartUpload,Long Statement,The length of the statement "return prepareMultipartUpload(bucketName`fileName`contentType`contentEncoding`uploadId`owner`initiator`Collections.emptyMap());" is 127.,778
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putPart,Long Parameter List,The method has 6 parameters. ,836
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putPart,Long Statement,The length of the statement "try (final DigestInputStream digestingInputStream=new DigestInputStream(wrapStream(inputStream`useV4ChunkedWithSigningFormat)`MessageDigest.getInstance("MD5"))){" is 161.,836
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putPart,Long Statement,The length of the statement "inputStreamToFile(digestingInputStream`Paths.get(rootFolder.getAbsolutePath()`bucketName`fileName`uploadId`partNumber + PART_SUFFIX));" is 134.,836
S3Mock,com.adobe.testing.s3mock.domain,FileStore,completeMultipartUpload,Long Parameter List,The method has 6 parameters. ,885
S3Mock,com.adobe.testing.s3mock.domain,FileStore,listAndSortPartsInFromDirectory,Long Statement,The length of the statement "Arrays.sort(partNames != null ? partNames : new String[0]`Comparator.comparingInt(s -> Integer.parseInt(s.substring(0`s.indexOf(PART_SUFFIX)))));" is 145.,959
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyPart,Long Parameter List,The method has 8 parameters. ,1104
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyPart,Long Parameter List,The method has 5 parameters. ,1138
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyPart,Long Statement,The length of the statement "try (final InputStream sourceStream=FileUtils.openInputStream(s3Object.getDataFile());final OutputStream targetStream=new FileOutputStream(partFile)){" is 150.,1138
S3Mock,com.adobe.testing.s3mock.domain,FileStore,ensurePartFile,Long Statement,The length of the statement "final File partFile=Paths.get(rootFolder.getAbsolutePath()`destinationBucket`destinationFilename`uploadId`partNumber + PART_SUFFIX).toFile();" is 141.,1156
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,bucketShouldExist,Long Statement,The length of the statement "assertThat(doesBucketExist).as(String.format("The previously created bucket` '%s'` should exist!"`TEST_BUCKET_NAME)).isTrue();" is 126.,104
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldHoldAllBuckets,Magic Number,The method contains a magic number: 3,131
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStoreFileInBucket,Long Statement,The length of the statement "final S3Object returnedObject=fileStore.putS3Object(TEST_BUCKET_NAME`name`null`ENCODING_GZIP`new FileInputStream(sourceFile)`false);" is 132.,166
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStoreFileInBucket,Long Statement,The length of the statement "assertThat(returnedObject.getContentType()).as("ContentType should be '" + "binary/octet-stream" + "'").isEqualTo("binary/octet-stream");" is 137.,166
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStoreFileInBucket,Long Statement,The length of the statement "assertThat(returnedObject.getContentEncoding()).as("ContentEncoding should be '" + ENCODING_GZIP + "'").isEqualTo(ENCODING_GZIP);" is 129.,166
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStoreFileInBucket,Long Statement,The length of the statement "assertThat(contentOf(sourceFile`UTF_8)).as("Files should be equal").isEqualTo(contentOf(returnedObject.getDataFile()`UTF_8));" is 125.,166
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStoreObjectEncrypted,Long Statement,The length of the statement "final S3Object storedObject=fileStore.putS3Object(TEST_BUCKET_NAME`name`contentType`null`new ByteArrayInputStream(SIGNED_CONTENT.getBytes(UTF_8))`true`Collections.emptyMap()`TEST_ENC_TYPE`TEST_ENC_KEY);" is 202.,195
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldGetEncryptedObject,Long Statement,The length of the statement "fileStore.putS3Object(TEST_BUCKET_NAME`name`contentType`null`new ByteArrayInputStream(SIGNED_CONTENT.getBytes(UTF_8))`true`Collections.emptyMap()`TEST_ENC_TYPE`TEST_ENC_KEY);" is 174.,228
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldGetFile,Long Statement,The length of the statement "assertThat(returnedObject.getContentEncoding()).as("ContentEncoding should be '" + ENCODING_GZIP + "'").isEqualTo(ENCODING_GZIP);" is 129.,261
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldGetFile,Long Statement,The length of the statement "assertThat(contentOf(sourceFile`UTF_8)).as("Files should be equal").isEqualTo(contentOf(returnedObject.getDataFile()`UTF_8));" is 125.,261
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldGetFileWithSlashAtStart,Long Statement,The length of the statement "assertThat(returnedObject.getContentEncoding()).as("ContentEncoding should be '" + ENCODING_GZIP + "'").isEqualTo(ENCODING_GZIP);" is 129.,293
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldGetFileWithSlashAtStart,Long Statement,The length of the statement "assertThat(contentOf(sourceFile`UTF_8)).as("Files should be equal").isEqualTo(contentOf(returnedObject.getDataFile()`UTF_8));" is 125.,293
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldCopyObject,Long Statement,The length of the statement "assertThat(contentOf(sourceFile`UTF_8)).as("Files should be equal!").isEqualTo(contentOf(copiedObject.getDataFile()`UTF_8));" is 124.,351
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldCopyObjectEncrypted,Long Statement,The length of the statement "fileStore.copyS3ObjectEncrypted(sourceBucketName`sourceObjectName`destinationBucketName`destinationObjectName`TEST_ENC_TYPE`TEST_ENC_KEY);" is 138.,379
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldCopyObjectEncrypted,Long Statement,The length of the statement "assertThat(copiedObject.getSize()).as("Files should have the same length").isEqualTo(String.valueOf(sourceFile.length()));" is 122.,379
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldCreateMultipartUploadFolder,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`"aFile"`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`"12345"`TEST_OWNER`TEST_OWNER);" is 124.,458
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldCreateMultipartUploadFolderIfBucketExists,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`"aFile"`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`"12345"`TEST_OWNER`TEST_OWNER);" is 124.,471
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStorePart,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,485
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStorePart,Long Statement,The length of the statement "assertThat(Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`uploadId`partNumber + ".part").toFile().exists()).as("Part does not exist!").isTrue();" is 162.,485
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldFinishUpload,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,504
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldFinishUpload,Long Statement,The length of the statement "assertThat(Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`"fileData").toFile().exists()).as("File does not exist!").isTrue();" is 143.,504
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldFinishUpload,Long Statement,The length of the statement "assertThat(Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`"metadata").toFile().exists()).as("Metadata does not exist!").isTrue();" is 147.,504
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldFinishUpload,Magic Number,The method contains a magic number: 2,504
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,hasValidMetadata,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,534
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,hasValidMetadata,Magic Number,The method contains a magic number: 2,534
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,returnsValidPartsFromMultipart,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,564
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,returnsValidPartsFromMultipart,Magic Number,The method contains a magic number: 2,564
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,returnsValidPartsFromMultipart,Magic Number,The method contains a magic number: 2,564
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,deletesTemporaryMultipartUploadFolder,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,601
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,deletesTemporaryMultipartUploadFolder,Long Statement,The length of the statement "assertThat(Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`uploadId).toFile().exists()).as("Folder should not exist anymore!").isFalse();" is 154.,601
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,listsMultipartUploads,Long Statement,The length of the statement "final MultipartUpload initiatedUpload=fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 164.,618
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,abortMultipartUpload,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,641
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,abortMultipartUpload,Long Statement,The length of the statement "assertThat(Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`"fileData").toFile().exists()).as("File exists!").isFalse();" is 136.,641
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,abortMultipartUpload,Long Statement,The length of the statement "assertThat(Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`"metadata").toFile().exists()).as("Metadata exists!").isFalse();" is 140.,641
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,abortMultipartUpload,Long Statement,The length of the statement "assertThat(Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`uploadId).toFile().exists()).as("Temp upload folder exists!").isFalse();" is 148.,641
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,copyPart,Long Statement,The length of the statement "fileStore.putS3Object(TEST_BUCKET_NAME`sourceFile`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`new ByteArrayInputStream(contentBytes)`false);" is 131.,667
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,copyPart,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`targetFile`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 128.,667
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,copyPart,Long Statement,The length of the statement "assertThat(Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`targetFile`uploadId`partNumber + ".part").toFile().exists()).as("Part does not exist!").isTrue();" is 164.,667
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,missingUploadPreparation,Long Statement,The length of the statement "IllegalStateException e=Assertions.assertThrows(IllegalStateException.class`() -> fileStore.copyPart(TEST_BUCKET_NAME`UUID.randomUUID().toString()`0`0`"1"`TEST_BUCKET_NAME`UUID.randomUUID().toString()`UUID.randomUUID().toString()));" is 232.,694
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,getObjectsForPartialPrefix,Long Statement,The length of the statement "fileStore.putS3Object(TEST_BUCKET_NAME`"foo_bar_baz"`TEXT_PLAIN`ENCODING_GZIP`new FileInputStream(TEST_FILE_PATH)`false);" is 121.,729
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,multipartUploadPartsAreSortedNumerically,Magic Number,The method contains a magic number: 11,776
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,multipartUploadPartsAreSortedNumerically,Magic Number,The method contains a magic number: 10,776
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,multipartUploadPartsAreSortedNumerically,Magic Number,The method contains a magic number: 10,776
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResult,ListBucketResult,Long Parameter List,The method has 9 parameters. ,68
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultV2,ListBucketResultV2,Long Parameter List,The method has 11 parameters. ,74
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResult,ListMultipartUploadsResult,Long Parameter List,The method has 11 parameters. ,58
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResult,toString,Long Statement,The length of the statement "return "ListMultipartUploadsResult{" + "bucket='" + bucket + '\''+ "` keyMarker='"+ keyMarker+ '\''+ "` delimiter='"+ delimiter+ '\''+ "` prefix='"+ prefix+ '\''+ "` uploadIdMarker='"+ uploadIdMarker+ '\''+ "` maxUploads="+ maxUploads+ "` isTruncated="+ isTruncated+ "` nextKeyMarker='"+ nextKeyMarker+ '\''+ "` nextUploadIdMarker='"+ nextUploadIdMarker+ '\''+ "` multipartUploads="+ multipartUploads+ "` commonPrefixes="+ commonPrefixes+ '}';" is 443.,97
S3Mock,com.adobe.testing.s3mock.dto,MultipartUpload,MultipartUpload,Long Parameter List,The method has 5 parameters. ,45
S3Mock,com.adobe.testing.s3mock.dto,MultipartUpload,toString,Long Statement,The length of the statement "return "MultipartUpload{" + "key='" + key + '\''+ "` uploadId='"+ uploadId+ '\''+ "` owner="+ owner+ "` initiator="+ initiator+ "` storageClass='"+ storageClass+ '\''+ "` initiated="+ initiated+ '}';" is 199.,87
S3Mock,com.adobe.testing.s3mock.dto,MultipartUpload,equals,Long Statement,The length of the statement "return Objects.equals(key`that.key) && Objects.equals(uploadId`that.uploadId) && Objects.equals(owner`that.owner)&& Objects.equals(initiator`that.initiator)&& Objects.equals(storageClass`that.storageClass)&& Objects.equals(initiated`that.initiated);" is 249.,99
S3Mock,com.adobe.testing.s3mock.dto,ObjectRef,extractBucketAndKeyArray,Magic Number,The method contains a magic number: 2,66
S3Mock,com.adobe.testing.s3mock.dto,ObjectRef,extractBucketAndKeyArray,Magic Number,The method contains a magic number: 2,66
S3Mock,com.adobe.testing.s3mock.dto,Part,equals,Long Statement,The length of the statement "return Objects.equals(partNumber`part.partNumber) && Objects.equals(lastModified`part.lastModified) && Objects.equals(etag`part.etag)&& Objects.equals(size`part.size);" is 167.,75
S3Mock,com.adobe.testing.s3mock.dto,Range,Range,Long Statement,The length of the statement "range=new Range(rangeStart == null ? 0L : Long.parseLong(rangeStart)`(StringUtils.isEmpty(rangeEnd) ? Long.MAX_VALUE : Long.parseLong(rangeEnd)));" is 146.,39
S3Mock,com.adobe.testing.s3mock.dto,Range,Range,Magic Number,The method contains a magic number: 2,39
S3Mock,com.adobe.testing.s3mock.dto,Range,Range,Magic Number,The method contains a magic number: 3,39
S3Mock,com.adobe.testing.s3mock.dto,Range,Range,Magic Number,The method contains a magic number: 5,39
S3Mock,com.adobe.testing.s3mock.dto,Range,Range,Magic Number,The method contains a magic number: 4,39
S3Mock,com.adobe.testing.s3mock.dto,BatchDeleteResponseTest,testSerialization,Magic Number,The method contains a magic number: 2,26
S3Mock,com.adobe.testing.s3mock.dto,CopyPartResultTest,testSerialization,Magic Number,The method contains a magic number: 1514477008120L,29
S3Mock,com.adobe.testing.s3mock.dto,ListAllMyBucketsResultTest,testSerialization,Magic Number,The method contains a magic number: 10L,31
S3Mock,com.adobe.testing.s3mock.dto,ListAllMyBucketsResultTest,testSerialization,Magic Number,The method contains a magic number: 2,31
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultTest,testSerialization,Long Statement,The length of the statement "ListBucketResult iut=new ListBucketResult("bucketName"`"prefix/"`"marker"`1000`false`"url"`"nextMarker"`createBucketContents(2)`Arrays.asList("prefix1/"`"prefix2/"));" is 166.,31
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultTest,testSerialization,Magic Number,The method contains a magic number: 1000,31
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultTest,testSerialization,Magic Number,The method contains a magic number: 2,31
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultTest,createBucketContents,Long Statement,The length of the statement "BucketContents bucketContents=new BucketContents("key" + i`"2009-10-12T17:50:30.000Z"`"fba9dede5f27731c9771645a39863328"`"434234"`"STANDARD"`new Owner(10L + i`"displayName"));" is 175.,40
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultTest,createBucketContents,Magic Number,The method contains a magic number: 10L,40
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultV2Test,testSerialization,Long Statement,The length of the statement "ListBucketResultV2 iut=new ListBucketResultV2("bucketName"`"prefix/"`1000`false`createBucketContents(2)`Arrays.asList("prefix1/"`"prefix2/")`"continuationToken"`"2"`"nextContinuationToken"`"startAfter"`"url");" is 209.,31
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultV2Test,testSerialization,Magic Number,The method contains a magic number: 1000,31
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultV2Test,testSerialization,Magic Number,The method contains a magic number: 2,31
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultV2Test,createBucketContents,Long Statement,The length of the statement "BucketContents bucketContents=new BucketContents("key" + i`"2009-10-12T17:50:30.000Z"`"fba9dede5f27731c9771645a39863328"`"434234"`"STANDARD"`new Owner(10L + i`"displayName"));" is 175.,41
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultV2Test,createBucketContents,Magic Number,The method contains a magic number: 10L,41
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResultTest,testSerialization,Long Statement,The length of the statement "ListMultipartUploadsResult iut=new ListMultipartUploadsResult("bucketName"`"keyMarker"`"/"`"prefix/"`"uploadIdMarker"`2`false`"nextKeyMarker"`"nextUploadIdMarker"`createMultipartUploads(2)`Arrays.asList("prefix1/"`"prefix2/"));" is 227.,30
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResultTest,testSerialization,Magic Number,The method contains a magic number: 2,30
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResultTest,testSerialization,Magic Number,The method contains a magic number: 2,30
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResultTest,createMultipartUploads,Long Statement,The length of the statement "MultipartUpload multipartUpload=new MultipartUpload("key" + i`"uploadId" + i`new Owner(10L + i`"displayName10" + i)`new Owner(100L + i`"displayName100" + i)`new Date(1514477008120L));" is 183.,41
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResultTest,createMultipartUploads,Magic Number,The method contains a magic number: 10L,41
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResultTest,createMultipartUploads,Magic Number,The method contains a magic number: 100L,41
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResultTest,createMultipartUploads,Magic Number,The method contains a magic number: 1514477008120L,41
S3Mock,com.adobe.testing.s3mock.dto,ListPartsResultTest,testSerialization,Magic Number,The method contains a magic number: 2,30
S3Mock,com.adobe.testing.s3mock.dto,ListPartsResultTest,createParts,Magic Number,The method contains a magic number: 1514477008120L,39
S3Mock,com.adobe.testing.s3mock.dto,ListPartsResultTest,createParts,Magic Number,The method contains a magic number: 10L,39
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucket,Long Parameter List,The method has 6 parameters. ,241
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucket,Long Statement,The length of the statement "return ResponseEntity.ok(new ListBucketResult(bucketName`returnPrefix`marker`maxKeys`isTruncated`encodingtype`nextMarker`contents`returnCommonPrefixes));" is 153.,241
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucketV2,Long Parameter List,The method has 7 parameters. ,314
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucketV2,Long Statement,The length of the statement "return ResponseEntity.ok(new ListBucketResultV2(bucketName`returnPrefix`maxKeys`isTruncated`filteredContents`returnCommonPrefixes`continuationToken`String.valueOf(filteredContents.size())`nextContinuationToken`returnStartAfter`encodingtype));" is 242.,314
S3Mock,com.adobe.testing.s3mock,FileStoreController,listMultipartUploads,Long Statement,The length of the statement "final List<MultipartUpload> multipartUploads=fileStore.listMultipartUploads().stream().filter(m -> isBlank(prefix) || m.getKey().startsWith(prefix)).map(m -> new MultipartUpload(decode(m.getKey())`m.getUploadId()`m.getOwner()`m.getInitiator()`m.getInitiated())).collect(Collectors.toList());" is 291.,402
S3Mock,com.adobe.testing.s3mock,FileStoreController,listMultipartUploads,Long Statement,The length of the statement "return ResponseEntity.ok(new ListMultipartUploadsResult(bucketName`keyMarker`delimiter`prefix`uploadIdMarker`maxUploads`isTruncated`nextKeyMarker`nextUploadIdMarker`multipartUploads`commonPrefixes));" is 199.,402
S3Mock,com.adobe.testing.s3mock,FileStoreController,listMultipartUploads,Magic Number,The method contains a magic number: 1000,402
S3Mock,com.adobe.testing.s3mock,FileStoreController,headObject,Long Statement,The length of the statement ").contentType(parseMediaType(s3Object.getContentType())).eTag("\"" + s3Object.getMd5() + "\"").contentLength(Long.parseLong(s3Object.getSize())).lastModified(s3Object.getLastModified()).build();" is 194.,487
S3Mock,com.adobe.testing.s3mock,FileStoreController,getObject,Long Parameter List,The method has 5 parameters. ,570
S3Mock,com.adobe.testing.s3mock,FileStoreController,getObject,Long Statement,The length of the statement "return ResponseEntity.ok().eTag("\"" + s3Object.getMd5() + "\"").header(HttpHeaders.CONTENT_ENCODING`s3Object.getContentEncoding()).header(HttpHeaders.ACCEPT_RANGES`RANGES_BYTES).header(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN`ANY).headers(headers -> headers.setAll(createUserMetadataHeaders(s3Object))).lastModified(s3Object.getLastModified()).contentLength(s3Object.getDataFile().length()).contentType(parseMediaType(s3Object.getContentType())).headers(headers -> headers.setAll(addOverrideHeaders(request.getQueryString()))).body(outputStream -> Files.copy(s3Object.getDataFile().toPath()`outputStream));" is 606.,570
S3Mock,com.adobe.testing.s3mock,FileStoreController,putObjectPart,Long Parameter List,The method has 7 parameters. ,703
S3Mock,com.adobe.testing.s3mock,FileStoreController,putObjectPart,Long Statement,The length of the statement "final String etag=fileStore.putPart(bucketName`filename`uploadId`partNumber`request.getInputStream()`isV4ChunkedWithSigningEnabled(sha256Header));" is 146.,703
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObjectPart,Long Parameter List,The method has 8 parameters. ,750
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObjectPart,Long Statement,The length of the statement "final String partEtag=fileStore.copyPart(copySource.getBucket()`copySource.getKey()`copyRange.getStart()`copyRange.getEnd()`partNumber`destinationBucket`destinationFile`uploadId);" is 179.,750
S3Mock,com.adobe.testing.s3mock,FileStoreController,putObject,Long Parameter List,The method has 8 parameters. ,801
S3Mock,com.adobe.testing.s3mock,FileStoreController,putObject,Long Statement,The length of the statement "s3Object=fileStore.putS3Object(bucketName`filename`parseMediaType(contentType).toString()`contentEncoding`inputStream`isV4ChunkedWithSigningEnabled(sha256Header)`userMetadata`encryption`kmsKeyId);" is 196.,801
S3Mock,com.adobe.testing.s3mock,FileStoreController,putObject,Long Statement,The length of the statement "return ResponseEntity.ok().eTag("\"" + s3Object.getMd5() + "\"").lastModified(s3Object.getLastModified()).header(SERVER_SIDE_ENCRYPTION_AWS_KMS_KEYID`kmsKeyId).build();" is 168.,801
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObject,Long Parameter List,The method has 6 parameters. ,853
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObject,Long Statement,The length of the statement "copyObjectResult=fileStore.copyS3ObjectEncrypted(objectRef.getBucket()`objectRef.getKey()`destinationBucket`destinationFile`encryption`kmsKeyId`getUserMetadata(request));" is 170.,853
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObject,Long Statement,The length of the statement "copyObjectResult=fileStore.copyS3ObjectEncrypted(objectRef.getBucket()`objectRef.getKey()`destinationBucket`destinationFile`encryption`kmsKeyId);" is 145.,853
S3Mock,com.adobe.testing.s3mock,FileStoreController,initiateMultipartUpload,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(bucketName`filename`parseMediaType(request.getContentType()).toString()`request.getHeader(HttpHeaders.CONTENT_ENCODING)`uploadId`TEST_OWNER`TEST_OWNER`userMetadata);" is 198.,911
S3Mock,com.adobe.testing.s3mock,FileStoreController,completeMultipartUpload,Long Parameter List,The method has 6 parameters. ,946
S3Mock,com.adobe.testing.s3mock,FileStoreController,completeMultipartUpload,Long Statement,The length of the statement "final String eTag=fileStore.completeMultipartUpload(bucketName`filename`uploadId`requestBody.getParts()`encryption`kmsKeyId);" is 125.,946
S3Mock,com.adobe.testing.s3mock,FileStoreController,completeMultipartUpload,Long Statement,The length of the statement "return ResponseEntity.ok(new CompleteMultipartUploadResult(request.getRequestURL().toString()`bucketName`filename`eTag));" is 121.,946
S3Mock,com.adobe.testing.s3mock,FileStoreController,getObjectWithRange,Long Statement,The length of the statement "return ResponseEntity.status(PARTIAL_CONTENT.value()).headers(headers -> headers.setAll(createUserMetadataHeaders(s3Object))).header(HttpHeaders.ACCEPT_RANGES`RANGES_BYTES).header(HttpHeaders.CONTENT_RANGE`String.format("bytes %s-%s/%s"`range.getStart()`bytesToRead + range.getStart() - 1`s3Object.getSize())).eTag("\"" + s3Object.getMd5() + "\"").contentType(parseMediaType(s3Object.getContentType())).lastModified(s3Object.getLastModified()).contentLength(bytesToRead).body(outputStream -> {" is 493.,985
S3Mock,com.adobe.testing.s3mock,FileStoreController,applyUrlEncoding,Long Statement,The length of the statement "return contents.stream().map(c -> new BucketContents(encode(c.getKey())`c.getLastModified()`c.getEtag()`c.getSize()`c.getStorageClass()`c.getOwner())).collect(Collectors.toList());" is 180.,1058
S3Mock,com.adobe.testing.s3mock,FileStoreController,getBucketContents,Long Statement,The length of the statement "return s3Objects.stream().map(s3Object -> new BucketContents(decode(s3Object.getName())`s3Object.getModificationDate()`s3Object.getMd5()`s3Object.getSize()`"STANDARD"`TEST_OWNER)).sorted(BUCKET_CONTENTS_COMPARATOR).collect(Collectors.toList());" is 244.,1080
S3Mock,com.adobe.testing.s3mock,FileStoreController,isV4ChunkedWithSigningEnabled,Long Identifier,The length of the field STREAMING_AWS_4_HMAC_SHA_256_PAYLOAD is 36.,1096
S3Mock,com.adobe.testing.s3mock,FileStoreController,addOverrideHeaders,Long Statement,The length of the statement "return Arrays.stream(query.split("&")).filter(param -> isNotBlank(mapHeaderName(decode(substringBefore(param`"="))))).collect(Collectors.toMap((param) -> mapHeaderName(decode(substringBefore(param`"=")))`(param) -> decode(substringAfter(param`"="))));" is 251.,1101
S3Mock,com.adobe.testing.s3mock,FileStoreController,mapHeaderName,Long Identifier,The length of the field RESPONSE_HEADER_CONTENT_DISPOSITION is 35.,1112
S3Mock,com.adobe.testing.s3mock,FileStoreController,mapHeaderName,Long Identifier,The length of the field RESPONSE_HEADER_CONTENT_ENCODING is 32.,1112
S3Mock,com.adobe.testing.s3mock,FileStoreController,mapHeaderName,Long Identifier,The length of the field RESPONSE_HEADER_CONTENT_LANGUAGE is 32.,1112
S3Mock,com.adobe.testing.s3mock,FileStoreController,verifyPartNumberLimits,Long Statement,The length of the statement "throw new S3Exception(HttpStatus.BAD_REQUEST.value()`"InvalidRequest"`"Part number must be an integer between 1 and 10000` inclusive");" is 135.,1159
S3Mock,com.adobe.testing.s3mock,FileStoreController,verifyPartNumberLimits,Long Statement,The length of the statement "throw new S3Exception(HttpStatus.BAD_REQUEST.value()`"InvalidRequest"`"Part number must be an integer between 1 and 10000` inclusive");" is 135.,1159
S3Mock,com.adobe.testing.s3mock,FileStoreController,verifyPartNumberLimits,Magic Number,The method contains a magic number: 10000,1159
S3Mock,com.adobe.testing.s3mock,FileStoreController,validateMultipartParts,Long Statement,The length of the statement "final Map<Integer`String> uploadedPartsMap=uploadedParts.stream().collect(Collectors.toMap(Part::getPartNumber`Part::getETag));" is 127.,1181
S3Mock,com.adobe.testing.s3mock,FileStoreController,validateMultipartParts,Long Statement,The length of the statement "if (!uploadedPartsMap.containsKey(part.getPartNumber()) || !uploadedPartsMap.get(part.getPartNumber()).equals(part.getETag().replaceAll("^\"|\"$"`""))) {" is 153.,1181
S3Mock,com.adobe.testing.s3mock,FileStoreController,validateMultipartParts,Long Statement,The length of the statement "throw new S3Exception(HttpStatus.BAD_REQUEST.value()`"InvalidPart"`"One or more of the specified parts could not be found. The part might not have been " + "uploaded` or the specified entity tag might not have matched the part's entity" + " tag.");" is 248.,1181
S3Mock,com.adobe.testing.s3mock,FileStoreController,validateMultipartParts,Long Statement,The length of the statement "throw new S3Exception(HttpStatus.BAD_REQUEST.value()`"InvalidPartOrder"`"The list of parts was not in ascending order. The parts list must be specified in " + "order by part number.");" is 184.,1181
S3Mock,com.adobe.testing.s3mock,KmsValidationFilter,doFilterInternal,Complex Conditional,The conditional expression AWS_KMS.equals(encryptionTypeHeader) && !StringUtils.isBlank(encryptionKeyRef) && !keystore.validateKeyRef(encryptionKeyRef) is complex.,63
S3Mock,com.adobe.testing.s3mock,KmsValidationFilter,doFilterInternal,Long Statement,The length of the statement "if (AWS_KMS.equals(encryptionTypeHeader) && !StringUtils.isBlank(encryptionKeyRef) && !keystore.validateKeyRef(encryptionKeyRef)) {" is 131.,63
S3Mock,com.adobe.testing.s3mock,S3MockApplication,start,Long Identifier,The length of the field DEFAULT_SERVER_SSL_KEY_STORE_PASSWORD is 37.,179
S3Mock,com.adobe.testing.s3mock,S3MockApplication,start,Long Identifier,The length of the field DEFAULT_SERVER_SSL_KEY_PASSWORD is 31.,179
S3Mock,com.adobe.testing.s3mock,S3MockApplication,start,Long Statement,The length of the statement "final ConfigurableApplicationContext ctx=new SpringApplicationBuilder(S3MockApplication.class).properties(defaults).properties(properties).bannerMode(bannerMode).run(args);" is 172.,179
S3Mock,com.adobe.testing.s3mock,S3MockApplication,initBuckets,Long Statement,The length of the statement "final List<String> buckets=Arrays.stream(config.getInitialBuckets().trim().split("[`; ]")).map(String::trim).filter(s -> !s.isEmpty()).collect(toList());" is 153.,251
S3Mock,com.adobe.testing.s3mock.util,AwsChunkDecodingInputStream,read,Magic Number,The method contains a magic number: 16,71
S3Mock,com.adobe.testing.s3mock.util,AwsChunkDecodingInputStream,readUntil,Magic Number,The method contains a magic number: 0xFF,99
S3Mock,com.adobe.testing.s3mock.util,HashUtil,getDigest,Magic Number,The method contains a magic number: 1024,51
S3Mock,com.adobe.testing.s3mock.util,MetadataUtil,getUserMetadata,Long Statement,The length of the statement "return Collections.list(request.getHeaderNames()).stream().filter(header -> header.startsWith(HEADER_X_AMZ_META_PREFIX)).collect(Collectors.toMap(header -> header.substring(HEADER_X_AMZ_META_PREFIX.length())`request::getHeader));" is 229.,44
S3Mock,com.adobe.testing.s3mock.util,RangeTest,convertsValidRange,Magic Number,The method contains a magic number: 10L,27
S3Mock,com.adobe.testing.s3mock.util,RangeTest,convertsValidRange,Magic Number,The method contains a magic number: 35L,27
S3Mock,com.adobe.testing.s3mock.util,RangeTest,convertRangeWithRangeEndUndefined,Magic Number,The method contains a magic number: 10L,36
S3Mock,com.adobe.testing.s3mock.util,StringEncodingTest,testKeyEncoding,Magic Number,The method contains a magic number: 0x12ab,27
S3Mock,com.adobe.testing.s3mock.util,StringEncodingTest,testKeyEncoding,Magic Number,The method contains a magic number: 0x7f,27
S3Mock,com.adobe.testing.s3mock.util,StringEncodingTest,testKeyDecoding,Magic Number,The method contains a magic number: 0x12ab,46
S3Mock,com.adobe.testing.s3mock.util,StringEncodingTest,testKeyDecoding,Magic Number,The method contains a magic number: 0x7f,46
S3Mock,com.adobe.testing.s3mock.testsupport.common,S3MockStarter,createS3ClientV2,Long Statement,The length of the statement "return S3Client.builder().region(Region.of("us-east-1")).credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create("foo"`"bar"))).endpointOverride(URI.create(getServiceEndpoint())).httpClient(UrlConnectionHttpClient.builder().buildWithDefaults(AttributeMap.builder().put(TRUST_ALL_CERTIFICATES`Boolean.TRUE).build())).build();" is 348.,71
S3Mock,com.adobe.testing.s3mock.testsupport.common,S3MockStarter,createS3Client,Long Statement,The length of the statement "return AmazonS3ClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(credentials)).withClientConfiguration(configureClientToIgnoreInvalidSslCertificates(new ClientConfiguration())).withEndpointConfiguration(getEndpointConfiguration(region)).enablePathStyleAccess().build();" is 293.,99
S3Mock,com.adobe.testing.s3mock.testsupport.common,S3MockStarter,configureClientToIgnoreInvalidSslCertificates,Long Statement,The length of the statement "clientConfiguration.getApacheHttpClientConfig().withSslSocketFactory(new SSLConnectionSocketFactory(createBlindlyTrustingSslContext()`NoopHostnameVerifier.INSTANCE));" is 166.,136
S3Mock,com.adobe.testing.s3mock.junit5,S3MockExtension,supportsParameter,Long Statement,The length of the statement "return paramHasType(parameterContext`S3MockApplication.class) || paramHasType(parameterContext`AmazonS3.class) || paramHasType(parameterContext`S3Client.class);" is 160.,93
S3Mock,com.adobe.testing.s3mock.junit5.sdk1,CustomCertificateTest,connectWithCustomSSLContext,Long Statement,The length of the statement "AmazonS3 s3=AmazonS3ClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials("foo"`"bar"))).withClientConfiguration(createClientConfiguration(KEYSTORE_FILE_NAME)).withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration("https://localhost:" + s3mock.getPort()`"us-west-1")).enablePathStyleAccess().build();" is 359.,56
S3Mock,com.adobe.testing.s3mock.junit5.sdk1,CustomCertificateTest,connectWithCustomSSLContext,Long Statement,The length of the statement "Assertions.assertFalse(s3.doesBucketExistV2(bucketName)`() -> "Bucket " + bucketName + " must not be present at the mock server");" is 130.,56
S3Mock,com.adobe.testing.s3mock.junit5.sdk1,CustomCertificateTest,createClientConfiguration,Long Statement,The length of the statement "clientConfiguration.getApacheHttpClientConfig().setSslSocketFactory(new SSLConnectionSocketFactory(createSslContext(keystoreFileName)));" is 136.,85
S3Mock,com.adobe.testing.s3mock.junit5.sdk2,S3MockExtensionDeclarativeTest,shouldUploadAndDownloadObject,Long Statement,The length of the statement "s3Client.putObject(PutObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build()`RequestBody.fromFile(uploadFile));" is 134.,48
S3Mock,com.adobe.testing.s3mock.junit5.sdk2,S3MockExtensionDeclarativeTest,shouldUploadAndDownloadObject,Long Statement,The length of the statement "final ResponseInputStream<GetObjectResponse> response=s3Client.getObject(GetObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build());" is 155.,48
S3Mock,com.adobe.testing.s3mock.junit5.sdk2,S3MockExtensionProgrammaticTest,shouldUploadAndDownloadObject,Long Statement,The length of the statement "s3Client.putObject(PutObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build()`RequestBody.fromFile(uploadFile));" is 134.,51
S3Mock,com.adobe.testing.s3mock.junit5.sdk2,S3MockExtensionProgrammaticTest,shouldUploadAndDownloadObject,Long Statement,The length of the statement "final ResponseInputStream<GetObjectResponse> response=s3Client.getObject(GetObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build());" is 155.,51
S3Mock,com.adobe.testing.s3mock.testcontainers,S3MockContainer,S3MockContainer,Magic Number,The method contains a magic number: 200,41
S3Mock,com.adobe.testing.s3mock.testcontainers,S3MockContainerManualTest,setUp,Long Statement,The length of the statement "s3Mock=new S3MockContainer(S3MOCK_VERSION).withValidKmsKeys(TEST_ENC_KEYREF).withInitialBuckets(String.join("`"`INITIAL_BUCKET_NAMES));" is 135.,29
S3Mock,com.adobe.testing.s3mock.testcontainers,S3MockContainerTestBase,shouldUploadAndDownloadObject,Long Statement,The length of the statement "s3Client.putObject(PutObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build()`RequestBody.fromFile(uploadFile));" is 134.,62
S3Mock,com.adobe.testing.s3mock.testcontainers,S3MockContainerTestBase,shouldUploadAndDownloadObject,Long Statement,The length of the statement "final ResponseInputStream<GetObjectResponse> response=s3Client.getObject(GetObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build());" is 155.,62
S3Mock,com.adobe.testing.s3mock.testcontainers,S3MockContainerTestBase,defaultBucketsGotCreated,Long Statement,The length of the statement "final Set<String> bucketNames=buckets.stream().map(Bucket::name).filter(INITIAL_BUCKET_NAMES::contains).collect(Collectors.toSet());" is 132.,90
S3Mock,com.adobe.testing.s3mock.testcontainers,S3MockContainerTestBase,createS3ClientV2,Long Statement,The length of the statement "return S3Client.builder().region(Region.of("us-east-1")).credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create("foo"`"bar"))).endpointOverride(URI.create(endpoint)).httpClient(UrlConnectionHttpClient.builder().buildWithDefaults(AttributeMap.builder().put(TRUST_ALL_CERTIFICATES`Boolean.TRUE).build())).build();" is 336.,103
