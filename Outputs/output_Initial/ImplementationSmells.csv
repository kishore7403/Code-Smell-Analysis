Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
S3Mock,com.adobe.testing.s3mock.domain,BucketContents,BucketContents,Long Parameter List,The method has 6 parameters. ,56
S3Mock,com.adobe.testing.s3mock.domain,FileStore,bucketFromPath,Long Statement,The length of the statement "result=new Bucket(path`path.getFileName().toString()`S3_OBJECT_DATE_FORMAT.format(new Date(attributes.creationTime().toMillis())));" is 131.,182
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Parameter List,The method has 6 parameters. ,198
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Statement,The length of the statement "return putS3Object(bucketName`fileName`contentType`contentEncoding`dataStream`useV4ChunkedWithSigningFormat`Collections.emptyMap());" is 132.,198
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Parameter List,The method has 7 parameters. ,222
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3Object,Long Statement,The length of the statement "final File dataFile=inputStreamToFile(wrapStream(dataStream`useV4ChunkedWithSigningFormat)`objectRootFolder.toPath().resolve(DATA_FILE));" is 137.,222
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3ObjectWithKMSEncryption,Long Parameter List,The method has 7 parameters. ,288
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3ObjectWithKMSEncryption,Long Statement,The length of the statement "return putS3ObjectWithKMSEncryption(bucketName`fileName`contentType`dataStream`useV4Signing`Collections.emptyMap()`encryption`kmsKeyId);" is 136.,288
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3ObjectWithKMSEncryption,Long Parameter List,The method has 8 parameters. ,313
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putS3ObjectWithKMSEncryption,Long Statement,The length of the statement "final File dataFile=inputStreamToFile(wrapStream(dataStream`useV4ChunkedWithSigningFormat)`objectRootFolder.toPath().resolve(DATA_FILE));" is 137.,313
S3Mock,com.adobe.testing.s3mock.domain,FileStore,inputStreamToFile,Magic Number,The method contains a magic number: 1024,426
S3Mock,com.adobe.testing.s3mock.domain,FileStore,getS3Objects,Long Statement,The length of the statement "final Set<Path> collect=directoryHierarchy.filter(path -> path.toFile().isDirectory()).map(path -> theBucket.getPath().relativize(path)).filter(path -> isEmpty(prefix) || (null != normalizedPrefix && path.toString().startsWith(normalizedPrefix))).collect(toSet());" is 264.,519
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3Object,Long Statement,The length of the statement "final S3Object copiedObject=putS3Object(destinationBucketName`destinationObjectName`sourceObject.getContentType()`sourceObject.getContentEncoding()`new FileInputStream(sourceObject.getDataFile())`false`sourceObject.getUserMetadata());" is 234.,559
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3Object,Long Parameter List,The method has 5 parameters. ,593
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3Object,Long Statement,The length of the statement "final S3Object copiedObject=putS3Object(destinationBucketName`destinationObjectName`sourceObject.getContentType()`sourceObject.getContentEncoding()`new FileInputStream(sourceObject.getDataFile())`false`userMetadata);" is 216.,593
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3ObjectEncrypted,Long Parameter List,The method has 6 parameters. ,629
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3ObjectEncrypted,Long Statement,The length of the statement "final S3Object copiedObject=putS3ObjectWithKMSEncryption(destinationBucketName`destinationObjectName`sourceObject.getContentType()`new FileInputStream(sourceObject.getDataFile())`false`sourceObject.getUserMetadata()`encryption`kmsKeyId);" is 237.,629
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3ObjectEncrypted,Long Parameter List,The method has 7 parameters. ,666
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyS3ObjectEncrypted,Long Statement,The length of the statement "final S3Object copiedObject=putS3ObjectWithKMSEncryption(destinationBucketName`destinationObjectName`sourceObject.getContentType()`new FileInputStream(sourceObject.getDataFile())`false`userMetadata`encryption`kmsKeyId);" is 219.,666
S3Mock,com.adobe.testing.s3mock.domain,FileStore,prepareMultipartUpload,Long Parameter List,The method has 8 parameters. ,758
S3Mock,com.adobe.testing.s3mock.domain,FileStore,prepareMultipartUpload,Long Parameter List,The method has 7 parameters. ,789
S3Mock,com.adobe.testing.s3mock.domain,FileStore,prepareMultipartUpload,Long Statement,The length of the statement "return prepareMultipartUpload(bucketName`fileName`contentType`contentEncoding`uploadId`owner`initiator`Collections.emptyMap());" is 127.,789
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putPart,Long Parameter List,The method has 6 parameters. ,847
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putPart,Long Statement,The length of the statement "try (final DigestInputStream digestingInputStream=new DigestInputStream(wrapStream(inputStream`useV4ChunkedWithSigningFormat)`MessageDigest.getInstance("MD5"))){" is 161.,847
S3Mock,com.adobe.testing.s3mock.domain,FileStore,putPart,Long Statement,The length of the statement "inputStreamToFile(digestingInputStream`Paths.get(rootFolder.getAbsolutePath()`bucketName`fileName`uploadId`partNumber + PART_SUFFIX));" is 134.,847
S3Mock,com.adobe.testing.s3mock.domain,FileStore,completeMultipartUpload,Long Parameter List,The method has 6 parameters. ,896
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyPart,Long Parameter List,The method has 8 parameters. ,1115
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyPart,Long Parameter List,The method has 5 parameters. ,1149
S3Mock,com.adobe.testing.s3mock.domain,FileStore,copyPart,Long Statement,The length of the statement "try (final InputStream sourceStream=FileUtils.openInputStream(s3Object.getDataFile());final OutputStream targetStream=new FileOutputStream(partFile)){" is 150.,1149
S3Mock,com.adobe.testing.s3mock.domain,FileStore,ensurePartFile,Long Statement,The length of the statement "final File partFile=Paths.get(rootFolder.getAbsolutePath()`destinationBucket`destinationFilename`uploadId`partNumber + PART_SUFFIX).toFile();" is 141.,1167
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,bucketShouldExist,Long Statement,The length of the statement "assertThat(String.format("The previously created bucket` '%s'` should exist!"`TEST_BUCKET_NAME)`doesBucketExist`is(true));" is 122.,111
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldHoldAllBuckets,Magic Number,The method contains a magic number: 3,139
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStoreFileInBucket,Long Statement,The length of the statement "final S3Object returnedObject=fileStore.putS3Object(TEST_BUCKET_NAME`name`null`ENCODING_GZIP`new FileInputStream(sourceFile)`false);" is 132.,174
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStoreFileInBucket,Long Statement,The length of the statement "assertThat("ContentType should be '" + "binary/octet-stream" + "'"`returnedObject.getContentType()`is("binary/octet-stream"));" is 126.,174
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStoreObjectEncrypted,Long Statement,The length of the statement "final S3Object returnedObject=fileStore.putS3ObjectWithKMSEncryption(TEST_BUCKET_NAME`name`contentType`new ByteArrayInputStream(SIGNED_CONTENT.getBytes(UTF_8))`true`TEST_ENC_TYPE`TEST_ENC_KEY);" is 193.,203
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldGetEncryptedObject,Long Statement,The length of the statement "fileStore.putS3ObjectWithKMSEncryption(TEST_BUCKET_NAME`name`contentType`new ByteArrayInputStream(SIGNED_CONTENT.getBytes(UTF_8))`true`TEST_ENC_TYPE`TEST_ENC_KEY);" is 163.,233
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldCopyObjectEncrypted,Long Statement,The length of the statement "fileStore.copyS3ObjectEncrypted(sourceBucketName`sourceObjectName`destinationBucketName`destinationObjectName`TEST_ENC_TYPE`TEST_ENC_KEY);" is 138.,380
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldCreateMultipartUploadFolder,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`"aFile"`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`"12345"`TEST_OWNER`TEST_OWNER);" is 124.,460
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldCreateMultipartUploadFolderIfBucketExists,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`"aFile"`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`"12345"`TEST_OWNER`TEST_OWNER);" is 124.,472
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStorePart,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,485
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldStorePart,Long Statement,The length of the statement "assertThat("Part does not exist!"`Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`uploadId`partNumber + ".part").toFile().exists()`is(true));" is 158.,485
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldFinishUpload,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,506
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldFinishUpload,Long Statement,The length of the statement "assertThat("File does not exist!"`Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`"fileData").toFile().exists()`is(true));" is 139.,506
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldFinishUpload,Long Statement,The length of the statement "assertThat("Metadata does not exist!"`Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`"metadata").toFile().exists()`is(true));" is 143.,506
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,shouldFinishUpload,Magic Number,The method contains a magic number: 2,506
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,hasValidMetadata,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,539
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,hasValidMetadata,Magic Number,The method contains a magic number: 2,539
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,returnsValidPartsFromMultipart,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,569
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,returnsValidPartsFromMultipart,Magic Number,The method contains a magic number: 2,569
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,returnsValidPartsFromMultipart,Magic Number,The method contains a magic number: 2,569
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,deletesTemporaryMultipartUploadFolder,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,608
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,deletesTemporaryMultipartUploadFolder,Long Statement,The length of the statement "assertThat("Folder should not exist anymore!"`Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`uploadId).toFile().exists()`is(false));" is 150.,608
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,listsMultipartUploads,Long Statement,The length of the statement "final MultipartUpload initiatedUpload=fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 164.,626
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,abortMultipartUpload,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`fileName`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 126.,649
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,abortMultipartUpload,Long Statement,The length of the statement "assertThat("File exists!"`Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`"fileData").toFile().exists()`is(false));" is 132.,649
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,abortMultipartUpload,Long Statement,The length of the statement "assertThat("Metadata exists!"`Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`"metadata").toFile().exists()`is(false));" is 136.,649
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,abortMultipartUpload,Long Statement,The length of the statement "assertThat("Temp upload folder exists!"`Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`fileName`uploadId).toFile().exists()`is(false));" is 144.,649
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,copyPart,Long Statement,The length of the statement "fileStore.putS3Object(TEST_BUCKET_NAME`sourceFile`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`new ByteArrayInputStream(contentBytes)`false);" is 131.,678
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,copyPart,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(TEST_BUCKET_NAME`targetFile`DEFAULT_CONTENT_TYPE`ENCODING_GZIP`uploadId`TEST_OWNER`TEST_OWNER);" is 128.,678
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,copyPart,Long Statement,The length of the statement "assertThat("Part does not exist!"`Paths.get(rootFolder.getAbsolutePath()`TEST_BUCKET_NAME`targetFile`uploadId`partNumber + ".part").toFile().exists()`is(true));" is 160.,678
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,missingUploadPreparation,Long Statement,The length of the statement "IllegalStateException e=Assertions.assertThrows(IllegalStateException.class`() -> fileStore.copyPart(TEST_BUCKET_NAME`UUID.randomUUID().toString()`0`0`"1"`TEST_BUCKET_NAME`UUID.randomUUID().toString()`UUID.randomUUID().toString()));" is 232.,706
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,getObjectsForPartialPrefix,Long Statement,The length of the statement "fileStore.putS3Object(TEST_BUCKET_NAME`"foo_bar_baz"`TEXT_PLAIN`ENCODING_GZIP`new FileInputStream(TEST_FILE_PATH)`false);" is 121.,741
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,multipartUploadPartsAreSortedNumerically,Magic Number,The method contains a magic number: 11,788
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,multipartUploadPartsAreSortedNumerically,Magic Number,The method contains a magic number: 10,788
S3Mock,com.adobe.testing.s3mock.domain,FileStoreTest,multipartUploadPartsAreSortedNumerically,Magic Number,The method contains a magic number: 10,788
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResult,ListBucketResult,Long Parameter List,The method has 9 parameters. ,72
S3Mock,com.adobe.testing.s3mock.dto,ListBucketResultV2,ListBucketResultV2,Long Parameter List,The method has 11 parameters. ,78
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResult,ListMultipartUploadsResult,Long Parameter List,The method has 11 parameters. ,58
S3Mock,com.adobe.testing.s3mock.dto,ListMultipartUploadsResult,toString,Long Statement,The length of the statement "return "ListMultipartUploadsResult{" + "bucket='" + bucket + '\''+ "` keyMarker='"+ keyMarker+ '\''+ "` delimiter='"+ delimiter+ '\''+ "` prefix='"+ prefix+ '\''+ "` uploadIdMarker='"+ uploadIdMarker+ '\''+ "` maxUploads="+ maxUploads+ "` isTruncated="+ isTruncated+ "` nextKeyMarker='"+ nextKeyMarker+ '\''+ "` nextUploadIdMarker='"+ nextUploadIdMarker+ '\''+ "` multipartUploads="+ multipartUploads+ "` commonPrefixes="+ commonPrefixes+ '}';" is 443.,97
S3Mock,com.adobe.testing.s3mock.dto,MultipartUpload,MultipartUpload,Long Parameter List,The method has 5 parameters. ,45
S3Mock,com.adobe.testing.s3mock.dto,MultipartUpload,toString,Long Statement,The length of the statement "return "MultipartUpload{" + "key='" + key + '\''+ "` uploadId='"+ uploadId+ '\''+ "` owner="+ owner+ "` initiator="+ initiator+ "` storageClass='"+ storageClass+ '\''+ "` initiated="+ initiated+ '}';" is 199.,87
S3Mock,com.adobe.testing.s3mock.dto,MultipartUpload,equals,Long Statement,The length of the statement "return Objects.equals(key`that.key) && Objects.equals(uploadId`that.uploadId) && Objects.equals(owner`that.owner)&& Objects.equals(initiator`that.initiator)&& Objects.equals(storageClass`that.storageClass)&& Objects.equals(initiated`that.initiated);" is 249.,99
S3Mock,com.adobe.testing.s3mock.dto,ObjectRef,extractBucketAndKeyArray,Magic Number,The method contains a magic number: 2,74
S3Mock,com.adobe.testing.s3mock.dto,ObjectRef,extractBucketAndKeyArray,Magic Number,The method contains a magic number: 2,74
S3Mock,com.adobe.testing.s3mock.dto,CopyPartResultTest,testCreationFromDate,Magic Number,The method contains a magic number: 1514477008120L,26
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucket,Long Parameter List,The method has 7 parameters. ,278
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucket,Long Statement,The length of the statement "return new ListBucketResult(bucketName`returnPrefix`marker`maxKeys`isTruncated`encodingtype`nextMarker`contents`returnCommonPrefixes);" is 134.,278
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucket,Magic Number,The method contains a magic number: 500,278
S3Mock,com.adobe.testing.s3mock,FileStoreController,applyUrlEncoding,Long Statement,The length of the statement "return contents.stream().map(c -> new BucketContents(encodeString(c.getKey())`c.getLastModified()`c.getEtag()`c.getSize()`c.getStorageClass()`c.getOwner())).collect(Collectors.toList());" is 186.,354
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucketV2,Long Parameter List,The method has 8 parameters. ,393
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucketV2,Long Statement,The length of the statement "return new ListBucketResultV2(bucketName`returnPrefix`maxKeysParam`isTruncated`filteredContents`returnCommonPrefixes`continuationToken`String.valueOf(filteredContents.size())`nextContinuationToken`returnStartAfter`encodingtype);" is 228.,393
S3Mock,com.adobe.testing.s3mock,FileStoreController,listObjectsInsideBucketV2,Magic Number,The method contains a magic number: 500,393
S3Mock,com.adobe.testing.s3mock,FileStoreController,getBucketContents,Long Statement,The length of the statement "return s3Objects.stream().map(s3Object -> new BucketContents(fileNameToObjectName(s3Object.getName())`s3Object.getModificationDate()`s3Object.getMd5()`s3Object.getSize()`"STANDARD"`TEST_OWNER)).sorted(BUCKET_CONTENTS_COMPARATOR).collect(Collectors.toList());" is 258.,501
S3Mock,com.adobe.testing.s3mock,FileStoreController,putObject,Long Statement,The length of the statement "final S3Object s3Object=fileStore.putS3Object(bucketName`filename`request.getContentType()`request.getHeader(HttpHeaders.CONTENT_ENCODING)`inputStream`isV4ChunkedWithSigningEnabled(request)`userMetadata);" is 204.,517
S3Mock,com.adobe.testing.s3mock,FileStoreController,isV4ChunkedWithSigningEnabled,Long Identifier,The length of the field STREAMING_AWS_4_HMAC_SHA_256_PAYLOAD is 36.,569
S3Mock,com.adobe.testing.s3mock,FileStoreController,putObjectEncrypted,Long Statement,The length of the statement "s3Object=fileStore.putS3ObjectWithKMSEncryption(bucketName`filename`request.getContentType()`inputStream`isV4ChunkedWithSigningEnabled(request)`userMetadata`encryption`kmsKeyId);" is 178.,574
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObject,Long Parameter List,The method has 5 parameters. ,627
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObject,Long Parameter List,The method has 7 parameters. ,665
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObject,Long Statement,The length of the statement "copyObjectResult=fileStore.copyS3ObjectEncrypted(objectRef.getBucket()`objectNameToFileName(objectRef.getKey())`destinationBucket`destinationFile`encryption`kmsKeyId`getUserMetadata(request));" is 192.,665
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObject,Long Statement,The length of the statement "copyObjectResult=fileStore.copyS3ObjectEncrypted(objectRef.getBucket()`objectNameToFileName(objectRef.getKey())`destinationBucket`destinationFile`encryption`kmsKeyId);" is 167.,665
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObject,Long Statement,The length of the statement "response.sendError(404`String.format("Could not find source File %s in Bucket %s!"`objectRef.getBucket()`objectRef.getKey()));" is 126.,665
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObject,Magic Number,The method contains a magic number: 404,665
S3Mock,com.adobe.testing.s3mock,FileStoreController,getObject,Long Parameter List,The method has 6 parameters. ,733
S3Mock,com.adobe.testing.s3mock,FileStoreController,addOverrideHeaders,Long Statement,The length of the statement "Arrays.stream(query.split("&")).map(this::splitQueryParameter).forEach((h) -> addOverrideHeader(response`h.getKey()`h.getValue()));" is 131.,782
S3Mock,com.adobe.testing.s3mock,FileStoreController,addOverrideHeader,Long Identifier,The length of the field RESPONSE_HEADER_CONTENT_DISPOSITION is 35.,800
S3Mock,com.adobe.testing.s3mock,FileStoreController,addOverrideHeader,Long Identifier,The length of the field RESPONSE_HEADER_CONTENT_ENCODING is 32.,800
S3Mock,com.adobe.testing.s3mock,FileStoreController,addOverrideHeader,Long Identifier,The length of the field RESPONSE_HEADER_CONTENT_LANGUAGE is 32.,800
S3Mock,com.adobe.testing.s3mock,FileStoreController,initiateMultipartUpload,Long Statement,The length of the statement "fileStore.prepareMultipartUpload(bucketName`filename`request.getContentType()`request.getHeader(HttpHeaders.CONTENT_ENCODING)`uploadId`TEST_OWNER`TEST_OWNER`userMetadata);" is 171.,972
S3Mock,com.adobe.testing.s3mock,FileStoreController,listMultipartUploads,Long Statement,The length of the statement "final List<MultipartUpload> multipartUploads=fileStore.listMultipartUploads().stream().filter(m -> isEmpty(prefix) || (prefix != null && m.getKey().startsWith(prefix))).map(m -> new MultipartUpload(fileNameToObjectName(m.getKey())`m.getUploadId()`m.getOwner()`m.getInitiator()`m.getInitiated())).collect(Collectors.toList());" is 325.,1008
S3Mock,com.adobe.testing.s3mock,FileStoreController,listMultipartUploads,Long Statement,The length of the statement "return new ListMultipartUploadsResult(bucketName`keyMarker`delimiter`prefix`uploadIdMarker`maxUploads`isTruncated`nextKeyMarker`nextUploadIdMarker`multipartUploads`commonPrefixes);" is 180.,1008
S3Mock,com.adobe.testing.s3mock,FileStoreController,listMultipartUploads,Magic Number,The method contains a magic number: 1000,1008
S3Mock,com.adobe.testing.s3mock,FileStoreController,putObjectPart,Long Parameter List,The method has 6 parameters. ,1101
S3Mock,com.adobe.testing.s3mock,FileStoreController,putObjectPart,Long Statement,The length of the statement "final String etag=fileStore.putPart(bucketName`filename`uploadId`partNumber`request.getInputStream()`isV4ChunkedWithSigningEnabled(request));" is 141.,1101
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObjectPart,Long Parameter List,The method has 8 parameters. ,1188
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObjectPart,Long Statement,The length of the statement "final String partEtag=fileStore.copyPart(copySource.getBucket()`copySource.getKey()`(int)copyRange.getStart()`(int)copyRange.getEnd()`partNumber`destinationBucket`destinationFile`uploadId);" is 189.,1188
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObjectPart,Long Parameter List,The method has 6 parameters. ,1241
S3Mock,com.adobe.testing.s3mock,FileStoreController,copyObjectPart,Long Statement,The length of the statement "return copyObjectPart(copySource`copyRange`ABSENT_ENCRYPTION`ABSENT_KEY_ID`destinationBucket`uploadId`partNumber`request);" is 122.,1241
S3Mock,com.adobe.testing.s3mock,FileStoreController,completeMultipartUpload,Long Statement,The length of the statement "return new ResponseEntity<>(new CompleteMultipartUploadResult(request.getRequestURL().toString()`bucketName`filename`eTag)`new HttpHeaders()`OK);" is 145.,1266
S3Mock,com.adobe.testing.s3mock,FileStoreController,completeMultipartUploadEncrypted,Long Parameter List,The method has 6 parameters. ,1300
S3Mock,com.adobe.testing.s3mock,FileStoreController,completeMultipartUploadEncrypted,Long Statement,The length of the statement "final String eTag=fileStore.completeMultipartUpload(bucketName`filename`uploadId`requestBody.getParts()`encryption`kmsKeyId);" is 125.,1300
S3Mock,com.adobe.testing.s3mock,FileStoreController,completeMultipartUploadEncrypted,Long Statement,The length of the statement "return new ResponseEntity<>(new CompleteMultipartUploadResult(request.getRequestURL().toString()`bucketName`filename`eTag)`new HttpHeaders()`OK);" is 145.,1300
S3Mock,com.adobe.testing.s3mock,FileStoreController,getObjectWithRange,Long Statement,The length of the statement "response.setHeader(HttpHeaders.CONTENT_RANGE`String.format("bytes %s-%s/%s"`range.getStart()`bytesToRead + range.getStart() - 1`s3Object.getSize()));" is 149.,1342
S3Mock,com.adobe.testing.s3mock,FileStoreController,filenameFrom,Long Statement,The length of the statement "return objectNameToFileName(UrlEncoded.decodeString(requestUri.substring(requestUri.indexOf(bucketName) + bucketName.length() + 1)));" is 133.,1386
S3Mock,com.adobe.testing.s3mock,FileStoreController,objectNameToFileName,Complex Conditional,The conditional expression c < ' ' || c >= 0x7f || c == '<' || c == '>' || c == ':' || c == '"' || c == '\\' || c == '|' || c == '?' || c == '*' || c == '.' || c == '%' is complex.,1396
S3Mock,com.adobe.testing.s3mock,FileStoreController,objectNameToFileName,Long Statement,The length of the statement "if (c < ' ' || c >= 0x7f || c == '<' || c == '>' || c == ':' || c == '"' || c == '\\' || c == '|' || c == '?' || c == '*' || c == '.' || c == '%') {" is 148.,1396
S3Mock,com.adobe.testing.s3mock,FileStoreController,objectNameToFileName,Magic Number,The method contains a magic number: 0x7f,1396
S3Mock,com.adobe.testing.s3mock,FileStoreController,objectNameToFileName,Magic Number,The method contains a magic number: 2,1396
S3Mock,com.adobe.testing.s3mock,FileStoreController,objectNameToFileName,Magic Number,The method contains a magic number: 0xff00,1396
S3Mock,com.adobe.testing.s3mock,FileStoreController,objectNameToFileName,Magic Number,The method contains a magic number: 8,1396
S3Mock,com.adobe.testing.s3mock,FileStoreController,objectNameToFileName,Magic Number,The method contains a magic number: 0xff,1396
S3Mock,com.adobe.testing.s3mock,FileStoreController,fileNameToObjectName,Magic Number,The method contains a magic number: 4,1440
S3Mock,com.adobe.testing.s3mock,FileStoreController,fileNameToObjectName,Magic Number,The method contains a magic number: 16,1440
S3Mock,com.adobe.testing.s3mock,FileStoreController,fileNameToObjectName,Magic Number,The method contains a magic number: 4,1440
S3Mock,com.adobe.testing.s3mock,FileStoreController,verifyPartNumberLimits,Long Statement,The length of the statement "throw new S3Exception(HttpStatus.BAD_REQUEST.value()`"InvalidRequest"`"Part number must be an integer between 1 and 10000` inclusive");" is 135.,1495
S3Mock,com.adobe.testing.s3mock,FileStoreController,verifyPartNumberLimits,Long Statement,The length of the statement "throw new S3Exception(HttpStatus.BAD_REQUEST.value()`"InvalidRequest"`"Part number must be an integer between 1 and 10000` inclusive");" is 135.,1495
S3Mock,com.adobe.testing.s3mock,FileStoreController,verifyPartNumberLimits,Magic Number,The method contains a magic number: 10000,1495
S3Mock,com.adobe.testing.s3mock,FileStoreController,validateMultipartParts,Long Statement,The length of the statement "final Map<Integer`String> uploadedPartsMap=uploadedParts.stream().collect(Collectors.toMap(Part::getPartNumber`Part::getETag));" is 127.,1525
S3Mock,com.adobe.testing.s3mock,FileStoreController,validateMultipartParts,Long Statement,The length of the statement "if (!uploadedPartsMap.containsKey(part.getPartNumber()) || !uploadedPartsMap.get(part.getPartNumber()).equals(part.getETag().replaceAll("^\"|\"$"`""))) {" is 153.,1525
S3Mock,com.adobe.testing.s3mock,FileStoreController,validateMultipartParts,Long Statement,The length of the statement "throw new S3Exception(HttpStatus.BAD_REQUEST.value()`"InvalidPart"`"One or more of the specified parts could not be found. The part might not have been " + "uploaded` or the specified entity tag might not have matched the part's entity" + " tag.");" is 248.,1525
S3Mock,com.adobe.testing.s3mock,FileStoreController,validateMultipartParts,Long Statement,The length of the statement "throw new S3Exception(HttpStatus.BAD_REQUEST.value()`"InvalidPartOrder"`"The list of parts was not in ascending order. The parts list must be specified in " + "order by part number.");" is 184.,1525
S3Mock,com.adobe.testing.s3mock,KmsValidationFilter,doFilterInternal,Complex Conditional,The conditional expression AWS_KMS.equals(encryptionTypeHeader) && !StringUtils.isBlank(encryptionKeyRef) && !keystore.validateKeyRef(encryptionKeyRef) is complex.,63
S3Mock,com.adobe.testing.s3mock,KmsValidationFilter,doFilterInternal,Long Statement,The length of the statement "if (AWS_KMS.equals(encryptionTypeHeader) && !StringUtils.isBlank(encryptionKeyRef) && !keystore.validateKeyRef(encryptionKeyRef)) {" is 131.,63
S3Mock,com.adobe.testing.s3mock,S3MockApplication,start,Long Identifier,The length of the field DEFAULT_SERVER_SSL_KEY_STORE_PASSWORD is 37.,183
S3Mock,com.adobe.testing.s3mock,S3MockApplication,start,Long Identifier,The length of the field DEFAULT_SERVER_SSL_KEY_PASSWORD is 31.,183
S3Mock,com.adobe.testing.s3mock,S3MockApplication,start,Long Statement,The length of the statement "final ConfigurableApplicationContext ctx=new SpringApplicationBuilder(S3MockApplication.class).properties(defaults).properties(properties).bannerMode(bannerMode).run(args);" is 172.,183
S3Mock,com.adobe.testing.s3mock,S3MockApplication,initBuckets,Long Statement,The length of the statement "final List<String> buckets=Arrays.stream(config.getInitialBuckets().trim().split("[`; ]")).map(String::trim).filter(s -> !s.isEmpty()).collect(toList());" is 153.,255
S3Mock,com.adobe.testing.s3mock,KeyEncodingTest,testKeyEncoding,Long Statement,The length of the statement "assertThat("multiple chars encoding"`objectNameToFileName((char)0x00 + ":<>%" + (char)0x7f)`equalTo("%0000%003A%003C%003E%0025%007F"));" is 135.,28
S3Mock,com.adobe.testing.s3mock,KeyEncodingTest,testKeyEncoding,Magic Number,The method contains a magic number: 0x12ab,28
S3Mock,com.adobe.testing.s3mock,KeyEncodingTest,testKeyEncoding,Magic Number,The method contains a magic number: 0x7f,28
S3Mock,com.adobe.testing.s3mock,KeyEncodingTest,testKeyDecoding,Long Statement,The length of the statement "assertThat("multiple chars encoding"`fileNameToObjectName("%0000%003A%003C%003E%0025%007F")`equalTo((char)0x00 + ":<>%" + (char)0x7f));" is 135.,44
S3Mock,com.adobe.testing.s3mock,KeyEncodingTest,testKeyDecoding,Magic Number,The method contains a magic number: 0x12ab,44
S3Mock,com.adobe.testing.s3mock,KeyEncodingTest,testKeyDecoding,Magic Number,The method contains a magic number: 0x7f,44
S3Mock,com.adobe.testing.s3mock,RangeConverterTest,convertsValidRange,Magic Number,The method contains a magic number: 10L,29
S3Mock,com.adobe.testing.s3mock,RangeConverterTest,convertsValidRange,Magic Number,The method contains a magic number: 35L,29
S3Mock,com.adobe.testing.s3mock,RangeConverterTest,convertRangeWithRangeEndUndefined,Magic Number,The method contains a magic number: 10L,38
S3Mock,com.adobe.testing.s3mock.util,AwsChunkDecodingInputStream,read,Magic Number,The method contains a magic number: 16,71
S3Mock,com.adobe.testing.s3mock.util,AwsChunkDecodingInputStream,readUntil,Magic Number,The method contains a magic number: 0xFF,99
S3Mock,com.adobe.testing.s3mock.util,HashUtil,getDigest,Magic Number,The method contains a magic number: 1024,51
S3Mock,com.adobe.testing.s3mock.util,MetadataUtil,getUserMetadata,Long Statement,The length of the statement "return Collections.list(request.getHeaderNames()).stream().filter(header -> header.startsWith(HEADER_X_AMZ_META_PREFIX)).collect(Collectors.toMap(header -> header.substring(HEADER_X_AMZ_META_PREFIX.length())`request::getHeader));" is 229.,45
S3Mock,com.adobe.testing.s3mock.util,RangeConverter,convert,Long Statement,The length of the statement "range=new Range(rangeStart == null ? 0L : Long.parseLong(rangeStart)`(StringUtils.isEmpty(rangeEnd) ? Long.MAX_VALUE : Long.parseLong(rangeEnd)));" is 146.,36
S3Mock,com.adobe.testing.s3mock.util,RangeConverter,convert,Magic Number,The method contains a magic number: 2,36
S3Mock,com.adobe.testing.s3mock.util,RangeConverter,convert,Magic Number,The method contains a magic number: 3,36
S3Mock,com.adobe.testing.s3mock.util,RangeConverter,convert,Magic Number,The method contains a magic number: 5,36
S3Mock,com.adobe.testing.s3mock.util,RangeConverter,convert,Magic Number,The method contains a magic number: 4,36
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateBucketAndListAllBuckets,Long Statement,The length of the statement "final List<Bucket> buckets=s3Client.listBuckets().stream().filter(b -> BUCKET_NAME.equals(b.getName())).collect(toList());" is 122.,100
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateBucketAndListAllBuckets,Magic Number,The method contains a magic number: 1000,100
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateBucketAndListAllBuckets,Magic Number,The method contains a magic number: 1000,100
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateBucketAndListAllBuckets,Magic Number,The method contains a magic number: 60000,100
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,defaultBucketsGotCreated,Long Statement,The length of the statement "final Set<String> bucketNames=buckets.stream().map(Bucket::getName).filter(INITIAL_BUCKET_NAMES::contains).collect(Collectors.toSet());" is 135.,127
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadAndListV2Objects,Magic Number,The method contains a magic number: 3,155
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadAndListV2Objects,Magic Number,The method contains a magic number: 3,155
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadAndDownloadObject,Long Statement,The length of the statement "final AmazonS3 uploadClient=defaultTestAmazonS3ClientBuilder().withPayloadSigningEnabled(uploadWithSigning).withChunkedEncodingDisabled(uploadChunked).build();" is 159.,184
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldHonorEncodingType,Long Statement,The length of the statement "assertThat(assertThrows(SdkClientException.class`() -> s3Client.listObjects(lor)).getMessage()`containsString("Failed to parse XML document"));" is 143.,298
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldHonorEncodingTypeV2,Long Statement,The length of the statement "assertThat(assertThrows(SdkClientException.class`() -> s3Client.listObjectsV2(lorv2)).getMessage()`containsString("Failed to parse XML document"));" is 147.,327
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadAndDownloadStream,Long Statement,The length of the statement "assertThat("Uploaded File should have Encoding-Type set"`s3Object.getObjectMetadata().getContentEncoding()`is(equalTo(contentEncoding)));" is 137.,354
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldUploadWithEncryption,Long Statement,The length of the statement "assertThat("User metadata should be identical!"`objectMetadata.getUserMetadata()`is(equalTo(metadata.getUserMetadata())));" is 122.,394
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotUploadWithWrongEncryptionKey,Long Statement,The length of the statement "assertThat(assertThrows(AmazonS3Exception.class`() -> s3Client.putObject(putObjectRequest)).getMessage()`containsString("Status Code: 400; Error Code: KMS.NotFoundException"));" is 176.,422
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotUploadStreamingWithWrongEncryptionKey,Long Statement,The length of the statement "assertThat(assertThrows(AmazonS3Exception.class`() -> s3Client.putObject(putObjectRequest)).getMessage()`containsString("Status Code: 400; Error Code: KMS.NotFoundException"));" is 176.,439
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObject,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,460
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectWithNewUserMetadata,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,492
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectWithNewUserMetadata,Long Statement,The length of the statement "assertThat("User metadata should be identical!"`copiedObject.getObjectMetadata().getUserMetadata()`is(equalTo(objectMetadata.getUserMetadata())));" is 146.,492
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectWithSourceUserMetadata,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,532
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectWithSourceUserMetadata,Long Statement,The length of the statement "assertThat("User metadata should be identical!"`copiedObject.getObjectMetadata().getUserMetadata()`is(equalTo(sourceObjectMetadata.getUserMetadata())));" is 152.,532
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectToKeyNeedingEscaping,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,574
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectFromKeyNeedingEscaping,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,606
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCopyObjectEncrypted,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,638
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotObjectCopyWithWrongEncryptionKey,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,671
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotObjectCopyWithWrongEncryptionKey,Long Statement,The length of the statement "assertThat(assertThrows(AmazonS3Exception.class`() -> s3Client.copyObject(copyObjectRequest)).getMessage()`containsString("Status Code: 400; Error Code: KMS.NotFoundException"));" is 178.,671
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectMetadata,Long Statement,The length of the statement "final PutObjectResult putObjectResult=s3Client.putObject(new PutObjectRequest(BUCKET_NAME`UPLOAD_FILE_NAME`uploadFile).withMetadata(objectMetadata));" is 149.,720
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectMetadata,Long Statement,The length of the statement "assertThat("Content-Encoding should be identical!"`metadataExisting.getContentEncoding()`is(putObjectResult.getMetadata().getContentEncoding()));" is 145.,720
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectMetadata,Long Statement,The length of the statement "assertThat("User metadata should be identical!"`metadataExisting.getUserMetadata()`is(equalTo(objectMetadata.getUserMetadata())));" is 130.,720
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectMetadata,Long Statement,The length of the statement "assertThat(assertThrows(AmazonS3Exception.class`() -> s3Client.getObjectMetadata(BUCKET_NAME`nonExistingFileName)).getMessage()`containsString("Status Code: 404"));" is 164.,720
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldDeleteObject,Long Statement,The length of the statement "assertThat(assertThrows(AmazonS3Exception.class`() -> s3Client.getObject(BUCKET_NAME`UPLOAD_FILE_NAME)).getMessage()`containsString("Status Code: 404"));" is 153.,752
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldBatchDeleteObjects,Long Statement,The length of the statement "assertThat("Only existing files were reported as deleted"`delObjRes.getDeletedObjects().stream().map(DeletedObject::getKey).collect(toList())`contains(file1`file2`file3));" is 171.,769
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldBatchDeleteObjects,Long Statement,The length of the statement "assertThat(assertThrows(AmazonS3Exception.class`() -> s3Client.getObject(BUCKET_NAME`UPLOAD_FILE_NAME)).getMessage()`containsString("Status Code: 404"));" is 153.,769
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldBatchDeleteObjects,Magic Number,The method contains a magic number: 3,769
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldNotDeleteNonEmptyBucket,Long Statement,The length of the statement "assertThat(assertThrows(AmazonS3Exception.class`() -> s3Client.deleteBucket(BUCKET_NAME)).getMessage()`containsString("Status Code: 409; Error Code: BucketNotEmpty"));" is 167.,823
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldGetObjectListing,Long Statement,The length of the statement "assertThat("The Name of the first S3ObjectSummary item has not expected the key name."`objectListingResult.getObjectSummaries().get(0).getKey()`is(UPLOAD_FILE_NAME));" is 166.,837
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Long Statement,The length of the statement "final Download download=transferManager.download(new GetObjectRequest(BUCKET_NAME`UPLOAD_FILE_NAME).withRange(1`2)`downloadFile);" is 129.,881
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Long Statement,The length of the statement "transferManager.download(new GetObjectRequest(BUCKET_NAME`UPLOAD_FILE_NAME).withRange(0`1000)`downloadFile).waitForCompletion();" is 128.,881
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Magic Number,The method contains a magic number: 2,881
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Magic Number,The method contains a magic number: 2L,881
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Magic Number,The method contains a magic number: 2L,881
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,checkRangeDownloads,Magic Number,The method contains a magic number: 1000,881
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,multipartCopy,Long Statement,The length of the statement "final Copy copy=transferManager.copy(sourceBucket.getName()`assumedSourceKey`targetBucket.getName()`assumedDestinationKey);" is 123.,912
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,multipartCopy,Long Statement,The length of the statement "assertThat("Hashes for source and target S3Object do not match."`uploadResult.getETag()`is(sourceInputStream.getEtag()));" is 121.,912
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,multipartCopy,Magic Number,The method contains a magic number: 3,912
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldAddAndRetrieveTags,Long Statement,The length of the statement "final SetObjectTaggingRequest setObjectTaggingRequest=new SetObjectTaggingRequest(BUCKET_NAME`s3Object.getKey()`new ObjectTagging(tagList));" is 140.,950
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,canAddTagsOnPutObject,Long Statement,The length of the statement "final PutObjectRequest putObjectRequest=new PutObjectRequest(BUCKET_NAME`uploadFile.getName()`uploadFile).withTagging(new ObjectTagging(tagList));" is 146.,987
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Identifier,The length of the identifier s3ObjectWithEtagDownloadedHash is 30.,1020
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Identifier,The length of the identifier s3ObjectWithHoutEtagDownloadedHash is 34.,1020
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Statement,The length of the statement "assertThat("The uploaded file and the recived file should be the same` " + "when requesting file with matching eTag given same eTag"`uploadHash`is(equalTo(s3ObjectWithEtagDownloadedHash)));" is 189.,1020
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Statement,The length of the statement "assertThat("The uploaded file and the recived file should be the same` " + "when requesting file with non-matching eTag but given different eTag"`uploadHash`is(equalTo(s3ObjectWithHoutEtagDownloadedHash)));" is 206.,1020
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Statement,The length of the statement "assertThat("Get Object with matching eTag should not return object if no eTag matches"`s3ObjectWithEtagNull`is(equalTo(null)));" is 127.,1020
S3Mock,com.adobe.testing.s3mock.its,AmazonClientUploadIT,shouldCreateAndRespectEtag,Long Statement,The length of the statement "assertThat("Get Object with non-matching eTag should not return object if eTag matches"`s3ObjectWithHoutEtagNull`is(equalTo(null)));" is 132.,1020
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,copyObjectToNonExistingDestinationBucket,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,100
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,copyObjectEncryptedToNonExistingDestinationBucket,Long Statement,The length of the statement "final CopyObjectRequest copyObjectRequest=new CopyObjectRequest(BUCKET_NAME`sourceKey`destinationBucketName`destinationKey);" is 124.,124
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,getNonExistingObject,Long Statement,The length of the statement "assertThat(assertThrows(AmazonS3Exception.class`() -> s3Client.getObject(getObjectRequest)).getMessage()`containsString(NO_SUCH_KEY));" is 134.,170
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,uploadParallelToNonExistingBucket,Long Statement,The length of the statement "final Upload upload=transferManager.upload(new PutObjectRequest(UUID.randomUUID().toString()`UPLOAD_FILE_NAME`uploadFile));" is 123.,264
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,abortMultipartUploadInNonExistingBucket,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,316
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,abortMultipartUploadInNonExistingBucket,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()`is(not(empty())));" is 127.,316
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,uploadMultipartWithInvalidPartNumber,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,339
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,uploadMultipartWithInvalidPartNumber,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()`is(not(empty())));" is 127.,339
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,uploadMultipartWithInvalidPartNumber,Long Statement,The length of the statement "final AmazonS3Exception e=Assertions.assertThrows(AmazonS3Exception.class`() -> s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(invalidPartNumber).withPartSize(uploadFile.length()).withLastPart(true)));" is 385.,339
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,367
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()`is(not(empty())));" is 127.,367
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Long Statement,The length of the statement "final PartETag partETag=s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(1).withPartSize(uploadFile.length()).withLastPart(true)).getPartETag();" is 326.,367
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Long Statement,The length of the statement "final AmazonS3Exception e=Assertions.assertThrows(AmazonS3Exception.class`() -> s3Client.completeMultipartUpload(new CompleteMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME`uploadId`partETags)));" is 199.,367
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,completeMultipartUploadWithNonExistingPartNumber,Magic Number,The method contains a magic number: 2,367
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,rangeDownloadsFromNonExistingBucket,Long Statement,The length of the statement "transferManager.download(new GetObjectRequest(UUID.randomUUID().toString()`UPLOAD_FILE_NAME).withRange(1`2)`downloadFile).waitForCompletion();" is 142.,401
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,rangeDownloadsFromNonExistingBucket,Magic Number,The method contains a magic number: 2,401
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,rangeDownloadsFromNonExistingObject,Long Statement,The length of the statement "transferManager.download(new GetObjectRequest(BUCKET_NAME`UUID.randomUUID().toString()).withRange(1`2)`downloadFile).waitForCompletion();" is 137.,428
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,rangeDownloadsFromNonExistingObject,Magic Number,The method contains a magic number: 2,428
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,multipartCopyToNonExistingBucket,Long Statement,The length of the statement "transferManager.copy(sourceBucket.getName()`assumedSourceKey`UUID.randomUUID().toString()`assumedDestinationKey).waitForCopyResult();" is 133.,455
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,multipartCopyToNonExistingBucket,Magic Number,The method contains a magic number: 3,455
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,multipartCopyNonExistingObject,Long Statement,The length of the statement "transferManager.copy(sourceBucket.getName()`UUID.randomUUID().toString()`targetBucket.getName()`assumedDestinationKey).waitForCopyResult();" is 139.,490
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesIT,multipartCopyNonExistingObject,Magic Number,The method contains a magic number: 3,490
S3Mock,com.adobe.testing.s3mock.its,ErrorResponsesV2IT,getNonExistingObject,Long Statement,The length of the statement "assertThat(assertThrows(NoSuchKeyException.class`() -> s3ClientV2.getObject(req)).getMessage()`containsString(NO_SUCH_KEY));" is 124.,32
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,data,Long Statement,The length of the statement "return Arrays.asList(param(null`null`null).keys(ALL_OBJECTS)`param(""`null`null).keys(ALL_OBJECTS)`param(null`""`null).keys(ALL_OBJECTS)`param("/"`null`null)`param("b"`null`null).keys("b"`"b/1"`"b/1/1"`"b/1/2"`"b/2")`param("b/"`null`null).keys("b/1"`"b/1/1"`"b/1/2"`"b/2")`param("b"`"/"`null).keys("b").prefixes("b/")`param("b/"`"/"`null).keys("b/1"`"b/2").prefixes("b/1/")`param("b/1"`"/"`null).keys("b/1").prefixes("b/1/")`param("b/1/"`"/"`null).keys("b/1/1"`"b/1/2")`param("c"`"/"`null).prefixes("c/")`param("c/"`"/"`null).keys("c/1").prefixes("c/1/")`param("eor"`"/"`null).keys("eor.txt")`param("b"`null`"b/1/1").keys("b/1/2"`"b/2")`param("b"`null`"b/0").keys("b/1"`"b/1/1"`"b/1/2"`"b/2")`param("3330/"`null`null).keys("3330/0")`param(null`null`null).encodedKeys(ALL_OBJECTS)`param("b/1"`"/"`null).encodedKeys("b/1").prefixes("b/1/"));" is 839.,109
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV1,Long Statement,The length of the statement "final ListObjectsRequest request=new ListObjectsRequest(BUCKET_NAME`parameters.prefix`parameters.startAfter`parameters.delimiter`null);" is 135.,155
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV1,Long Statement,The length of the statement "LOGGER.info("list V1` prefix='{}'` delimiter='{}': \n Objects: \n {}\n Prefixes: \n {}\n"`parameters.prefix`parameters.delimiter`l.getObjectSummaries().stream().map(S3ObjectSummary::getKey).collect(joining("\n "))`String.join("\n "`l.getCommonPrefixes()));" is 256.,155
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV1,Long Statement,The length of the statement "assertThat("Returned keys are correct"`l.getObjectSummaries().stream().map(S3ObjectSummary::getKey).collect(toList())`parameters.expectedKeys.length > 0 ? contains(parameters.expectedKeys) : empty());" is 200.,155
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV1,Long Statement,The length of the statement "assertThat("Returned prefixes are correct"`new ArrayList<>(l.getCommonPrefixes())`parameters.expectedPrefixes.length > 0 ? contains(expectedPrefixes) : empty());" is 161.,155
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV2,Long Statement,The length of the statement "final ListObjectsV2Result l=s3Client.listObjectsV2(new ListObjectsV2Request().withBucketName(BUCKET_NAME).withDelimiter(parameters.delimiter).withPrefix(parameters.prefix).withStartAfter(parameters.startAfter).withEncodingType(parameters.expectedEncoding));" is 257.,191
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV2,Long Statement,The length of the statement "LOGGER.info("list V2` prefix='{}'` delimiter='{}'` startAfter='{}': " + "\n Objects: \n {}\n Prefixes: \n {}\n"`parameters.prefix`parameters.delimiter`parameters.startAfter`l.getObjectSummaries().stream().map(s -> UrlEncoded.decodeString(s.getKey())).collect(joining("\n "))`String.join("\n "`l.getCommonPrefixes()));" is 317.,191
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV2,Long Statement,The length of the statement "assertThat("Returned keys are correct"`l.getObjectSummaries().stream().map(S3ObjectSummary::getKey).collect(toList())`parameters.expectedKeys.length > 0 ? contains(expectedDecodedKeys) : empty());" is 196.,191
S3Mock,com.adobe.testing.s3mock.its,ListObjectIT,listV2,Long Statement,The length of the statement "assertThat("Returned prefixes are correct"`new ArrayList<>(l.getCommonPrefixes())`parameters.expectedPrefixes.length > 0 ? contains(parameters.expectedPrefixes) : empty());" is 172.,191
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysIsDefault,Magic Number,The method contains a magic number: 2,49
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysIsDefault,Magic Number,The method contains a magic number: 1000,49
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysEqualToAmountOfObjects,Magic Number,The method contains a magic number: 2,58
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysEqualToAmountOfObjects,Magic Number,The method contains a magic number: 2,58
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysEqualToAmountOfObjects,Magic Number,The method contains a magic number: 2,58
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysMoreThanAmountOfObjects,Magic Number,The method contains a magic number: 3,68
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysMoreThanAmountOfObjects,Magic Number,The method contains a magic number: 2,68
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysMoreThanAmountOfObjects,Magic Number,The method contains a magic number: 3,68
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysIsNegative,Magic Number,The method contains a magic number: 2,88
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1MaxKeysIT,returnsAllObjectsIfMaxKeysIsNegative,Magic Number,The method contains a magic number: 1000,88
S3Mock,com.adobe.testing.s3mock.its,ListObjectV1PaginationIT,shouldTruncateAndReturnNextMarker,Long Statement,The length of the statement "final ListObjectsRequest continueRequest=new ListObjectsRequest().withBucketName(bucketName).withMarker(objectListing.getNextMarker());" is 135.,39
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME`objectMetadata));" is 180.,64
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "final UploadPartResult uploadPartResult=s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(1).withPartSize(uploadFile.length()).withLastPart(true));" is 328.,64
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "s3Client.completeMultipartUpload(new CompleteMultipartUploadRequest(initiateMultipartUploadResult.getBucketName()`initiateMultipartUploadResult.getKey()`initiateMultipartUploadResult.getUploadId()`partETags));" is 209.,64
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "final ObjectMetadata metadataExisting=s3Client.getObjectMetadata(initiateMultipartUploadResult.getBucketName()`initiateMultipartUploadResult.getKey());" is 151.,64
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldPassUserMetadataWithMultipartUploads,Long Statement,The length of the statement "assertThat("User metadata should be identical!"`metadataExisting.getUserMetadata()`is(equalTo(objectMetadata.getUserMetadata())));" is 130.,64
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldInitiateMultipartAndRetrieveParts,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME`objectMetadata));" is 180.,106
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldInitiateMultipartAndRetrieveParts,Long Statement,The length of the statement "s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(1).withPartSize(uploadFile.length()).withLastPart(true));" is 288.,106
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldListMultipartUploads,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()`is(empty()));" is 122.,147
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldListMultipartUploads,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,147
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAbortMultipartUpload,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()`is(empty()));" is 122.,192
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAbortMultipartUpload,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`UPLOAD_FILE_NAME));" is 165.,192
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAbortMultipartUpload,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()`is(not(empty())));" is 127.,192
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAbortMultipartUpload,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()`is(empty()));" is 122.,192
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "assertThat(s3Client.listMultipartUploads(new ListMultipartUploadsRequest(BUCKET_NAME)).getMultipartUploads()`is(empty()));" is 122.,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(BUCKET_NAME`key));" is 152.,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "PartETag partETag1=s3Client.uploadPart(getUploadPartRequest(key`uploadId).withPartNumber(1).withPartSize(randomBytes1.length).withInputStream(new ByteArrayInputStream(randomBytes1))).getPartETag();" is 197.,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "PartETag partETag2=s3Client.uploadPart(getUploadPartRequest(key`uploadId).withPartNumber(2).withPartSize(randomBytes2.length).withInputStream(new ByteArrayInputStream(randomBytes2))).getPartETag();" is 197.,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "PartETag partETag3=s3Client.uploadPart(getUploadPartRequest(key`uploadId).withPartNumber(3).withPartSize(randomBytes3.length).withInputStream(new ByteArrayInputStream(randomBytes3))).getPartETag();" is 197.,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "final CompleteMultipartUploadResult result=s3Client.completeMultipartUpload(new CompleteMultipartUploadRequest(BUCKET_NAME`key`uploadId`parts));" is 144.,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "assertThat("Content length doesn't match"`object.getObjectMetadata().getContentLength()`is((long)randomBytes1.length + randomBytes3.length));" is 141.,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Long Statement,The length of the statement "assertThat("Object contents doesn't match"`readStreamIntoByteArray(object.getObjectContent())`is(concatByteArrays(randomBytes1`randomBytes3)));" is 143.,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Magic Number,The method contains a magic number: 2,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,shouldAdherePartsInCompleteMultipartUploadRequest,Magic Number,The method contains a magic number: 3,216
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 5,301
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 1024,301
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 1024,301
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 1024,301
S3Mock,com.adobe.testing.s3mock.its,MultiPartUploadIT,createRandomBytes,Magic Number,The method contains a magic number: 1024,301
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,batchDeleteUsesApplicationXmlContentType,Long Statement,The length of the statement "postObject.setEntity(new StringEntity("<?xml version=\"1.0\" encoding=\"UTF-8\"?><Delete>" + "<Object><Key>myFile-1</Key></Object>" + "<Object><Key>myFile-2</Key></Object>"+ "</Delete>"`(ContentType)null));" is 206.,127
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,completeMultipartUsesApplicationXmlContentType,Long Statement,The length of the statement "final InitiateMultipartUploadResult initiateMultipartUploadResult=s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(targetBucket.getName()`UPLOAD_FILE_NAME));" is 176.,140
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,completeMultipartUsesApplicationXmlContentType,Long Statement,The length of the statement "final UploadPartResult uploadPartResult=s3Client.uploadPart(new UploadPartRequest().withBucketName(initiateMultipartUploadResult.getBucketName()).withKey(initiateMultipartUploadResult.getKey()).withUploadId(uploadId).withFile(uploadFile).withFileOffset(0).withPartNumber(1).withPartSize(uploadFile.length()).withLastPart(true));" is 328.,140
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,completeMultipartUsesApplicationXmlContentType,Long Statement,The length of the statement "final HttpPost postObject=new HttpPost(SLASH + targetBucket.getName() + SLASH+ UPLOAD_FILE_NAME+ "?uploadId="+ uploadId);" is 121.,140
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,completeMultipartUsesApplicationXmlContentType,Long Statement,The length of the statement "postObject.setEntity(new StringEntity("<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + "<CompleteMultipartUpload xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">" + "<Part>"+ "<ETag>" + uploadPartResult.getPartETag().getETag() + "</ETag>"+ "<PartNumber>1</PartNumber>"+ "</Part>"+ "</CompleteMultipartUpload>"`(ContentType)null));" is 330.,140
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,putObjectWithSpecialCharactersInTheName,Long Statement,The length of the statement "final String fileNameWithSpecialCharacters="file=name$Dollar;Semicolon" + "&Ampersand@At:Colon Space`Comma?Questionmark";" is 121.,174
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,putObjectWithSpecialCharactersInTheName,Long Statement,The length of the statement "final HttpPut putObject=new HttpPut(SLASH + targetBucket.getName() + SLASH+ UrlEncoded.encodeString(fileNameWithSpecialCharacters));" is 132.,174
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,putObjectWithSpecialCharactersInTheName,Long Statement,The length of the statement "assertThat(s3Client.listObjects(targetBucket.getName()).getObjectSummaries().get(0).getKey()`is(fileNameWithSpecialCharacters));" is 128.,174
S3Mock,com.adobe.testing.s3mock.its,PlainHttpIT,batchDeleteObjects,Long Statement,The length of the statement "postObject.setEntity(new StringEntity("<?xml version=\"1.0\" " + "encoding=\"UTF-8\"?><Delete><Object><Key>myFile-1</Key></Object><Object><Key>myFile-2" + "</Key></Object></Delete>"`(ContentType)null));" is 202.,206
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,defaultTestAmazonS3ClientBuilder,Long Statement,The length of the statement "return AmazonS3ClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials("foo"`"bar"))).withClientConfiguration(ignoringInvalidSslCertificates(new ClientConfiguration())).withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(getServiceEndpoint()`"us-east-1")).enablePathStyleAccess();" is 339.,94
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,createS3ClientV2,Long Statement,The length of the statement "return S3Client.builder().region(Region.of("us-east-1")).credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create("foo"`"bar"))).endpointOverride(URI.create(getServiceEndpoint())).httpClient(UrlConnectionHttpClient.builder().buildWithDefaults(AttributeMap.builder().put(TRUST_ALL_CERTIFICATES`Boolean.TRUE).build())).build();" is 348.,107
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,cleanupFilestore,Long Statement,The length of the statement "s3Client.listMultipartUploads(new ListMultipartUploadsRequest(bucket.getName())).getMultipartUploads().forEach(upload -> s3Client.abortMultipartUpload(new AbortMultipartUploadRequest(bucket.getName()`upload.getKey()`upload.getUploadId())));" is 240.,118
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,cleanupFilestore,Long Statement,The length of the statement "s3Client.listObjects(bucket.getName()).getObjectSummaries().forEach((object -> s3Client.deleteObject(bucket.getName()`object.getKey())));" is 137.,118
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,getPort,Magic Number,The method contains a magic number: 9191,140
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,getHttpPort,Magic Number,The method contains a magic number: 9090,144
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,ignoringInvalidSslCertificates,Long Statement,The length of the statement "clientConfiguration.getApacheHttpClientConfig().withSslSocketFactory(new SSLConnectionSocketFactory(createBlindlyTrustingSslContext()`NoopHostnameVerifier.INSTANCE));" is 166.,148
S3Mock,com.adobe.testing.s3mock.its,S3TestBase,createTransferManager,Long Statement,The length of the statement "return TransferManagerBuilder.standard().withS3Client(s3Client).withExecutorFactory(() -> Executors.newFixedThreadPool(THREAD_COUNT`threadFactory)).withMultipartUploadThreshold(multipartUploadThreshold).withMinimumUploadPartSize(multipartUploadPartSize).withMultipartCopyPartSize(multipartCopyPartSize).withMultipartCopyThreshold(multipartCopyThreshold).build();" is 362.,216
S3Mock,com.adobe.testing.s3mock.testsupport.common,S3MockStarter,createS3ClientV2,Long Statement,The length of the statement "return S3Client.builder().region(Region.of("us-east-1")).credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create("foo"`"bar"))).endpointOverride(URI.create(getServiceEndpoint())).httpClient(UrlConnectionHttpClient.builder().buildWithDefaults(AttributeMap.builder().put(TRUST_ALL_CERTIFICATES`Boolean.TRUE).build())).build();" is 348.,71
S3Mock,com.adobe.testing.s3mock.testsupport.common,S3MockStarter,createS3Client,Long Statement,The length of the statement "return AmazonS3ClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(credentials)).withClientConfiguration(configureClientToIgnoreInvalidSslCertificates(new ClientConfiguration())).withEndpointConfiguration(getEndpointConfiguration(region)).enablePathStyleAccess().build();" is 293.,99
S3Mock,com.adobe.testing.s3mock.testsupport.common,S3MockStarter,configureClientToIgnoreInvalidSslCertificates,Long Statement,The length of the statement "clientConfiguration.getApacheHttpClientConfig().withSslSocketFactory(new SSLConnectionSocketFactory(createBlindlyTrustingSslContext()`NoopHostnameVerifier.INSTANCE));" is 166.,136
S3Mock,com.adobe.testing.s3mock.junit5,S3MockExtension,supportsParameter,Long Statement,The length of the statement "return paramHasType(parameterContext`S3MockApplication.class) || paramHasType(parameterContext`AmazonS3.class) || paramHasType(parameterContext`S3Client.class);" is 160.,93
S3Mock,com.adobe.testing.s3mock.junit5.sdk1,CustomCertificateTest,connectWithCustomSSLContext,Long Statement,The length of the statement "AmazonS3 s3=AmazonS3ClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials("foo"`"bar"))).withClientConfiguration(createClientConfiguration(KEYSTORE_FILE_NAME)).withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration("https://localhost:" + s3mock.getPort()`"us-west-1")).enablePathStyleAccess().build();" is 359.,56
S3Mock,com.adobe.testing.s3mock.junit5.sdk1,CustomCertificateTest,connectWithCustomSSLContext,Long Statement,The length of the statement "Assertions.assertFalse(s3.doesBucketExistV2(bucketName)`() -> "Bucket " + bucketName + " must not be present at the mock server");" is 130.,56
S3Mock,com.adobe.testing.s3mock.junit5.sdk1,CustomCertificateTest,createClientConfiguration,Long Statement,The length of the statement "clientConfiguration.getApacheHttpClientConfig().setSslSocketFactory(new SSLConnectionSocketFactory(createSslContext(keystoreFileName)));" is 136.,85
S3Mock,com.adobe.testing.s3mock.junit5.sdk2,S3MockExtensionDeclarativeTest,shouldUploadAndDownloadObject,Long Statement,The length of the statement "s3Client.putObject(PutObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build()`RequestBody.fromFile(uploadFile));" is 134.,48
S3Mock,com.adobe.testing.s3mock.junit5.sdk2,S3MockExtensionDeclarativeTest,shouldUploadAndDownloadObject,Long Statement,The length of the statement "final ResponseInputStream<GetObjectResponse> response=s3Client.getObject(GetObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build());" is 155.,48
S3Mock,com.adobe.testing.s3mock.junit5.sdk2,S3MockExtensionProgrammaticTest,shouldUploadAndDownloadObject,Long Statement,The length of the statement "s3Client.putObject(PutObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build()`RequestBody.fromFile(uploadFile));" is 134.,51
S3Mock,com.adobe.testing.s3mock.junit5.sdk2,S3MockExtensionProgrammaticTest,shouldUploadAndDownloadObject,Long Statement,The length of the statement "final ResponseInputStream<GetObjectResponse> response=s3Client.getObject(GetObjectRequest.builder().bucket(BUCKET_NAME).key(uploadFile.getName()).build());" is 155.,51
